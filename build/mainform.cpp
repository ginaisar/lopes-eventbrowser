/****************************************************************************
** Form implementation generated from reading ui file 'forms/mainform.ui'
**
** Created: Tue Jun 24 15:55:36 2008
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.7   edited Aug 31 2005 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "mainform.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qsplitter.h>
#include <qtoolbutton.h>
#include <qheader.h>
#include <qlistview.h>
#include <qwidgetstack.h>
#include <qwidget.h>
#include <qlabel.h>
#include <qtabwidget.h>
#include <qlineedit.h>
#include <qgroupbox.h>
#include <qtextedit.h>
#include <qcombobox.h>
#include <qcheckbox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qaction.h>
#include <qmenubar.h>
#include <qpopupmenu.h>
#include <qtoolbar.h>
#include <qimage.h>
#include <qpixmap.h>

#include "../forms/mainform.ui.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x01,
    0x72, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0x92, 0x3d, 0x48, 0xc3,
    0x50, 0x14, 0x85, 0x3f, 0x7f, 0x86, 0x37, 0x46, 0x27, 0xb3, 0x55, 0x70,
    0x11, 0x5c, 0xe2, 0xcf, 0x50, 0x37, 0x1d, 0xe3, 0xe8, 0xa8, 0x9b, 0xc4,
    0xc9, 0xcd, 0xc1, 0x41, 0xdc, 0xba, 0x14, 0x05, 0x27, 0x71, 0x10, 0x07,
    0x21, 0x71, 0x74, 0xb2, 0xc1, 0x41, 0x41, 0xc4, 0x1f, 0xb0, 0x3f, 0x88,
    0x85, 0x2e, 0x16, 0xd2, 0xa9, 0xd9, 0x22, 0x38, 0x48, 0x06, 0xf5, 0x3a,
    0xc4, 0x42, 0x49, 0x88, 0x64, 0xa8, 0xe0, 0xd0, 0x03, 0x8f, 0x03, 0xef,
    0xbd, 0x7b, 0xee, 0xe5, 0xdc, 0x03, 0x7d, 0xfc, 0x0b, 0x18, 0x96, 0x5d,
    0xc9, 0x17, 0x03, 0x31, 0x2c, 0x5b, 0xb6, 0x8b, 0x41, 0xa5, 0x67, 0xc2,
    0x79, 0x2b, 0x90, 0xf3, 0x5a, 0x5b, 0x24, 0x10, 0x31, 0x2c, 0x5b, 0xb2,
    0xd4, 0x0c, 0x66, 0xf9, 0x14, 0xe2, 0xb2, 0x94, 0xd3, 0x29, 0xb5, 0x40,
    0x4d, 0x98, 0x99, 0x86, 0xc9, 0x24, 0xac, 0x30, 0x29, 0xb5, 0x7c, 0x96,
    0x72, 0x10, 0x36, 0xdd, 0xde, 0x09, 0x77, 0x4f, 0x6c, 0x66, 0x9c, 0x78,
    0x38, 0x7e, 0x61, 0x58, 0x76, 0x45, 0x61, 0xce, 0x84, 0xb8, 0x28, 0x4c,
    0x3a, 0x5c, 0x6a, 0xf9, 0x2c, 0xe6, 0x74, 0x76, 0x9a, 0x2e, 0x79, 0x2b,
    0x90, 0xd8, 0x7b, 0xf5, 0xe1, 0x68, 0x74, 0xf6, 0xd7, 0x4e, 0xf9, 0x62,
    0x20, 0x77, 0x0d, 0x11, 0x79, 0x17, 0x91, 0xe7, 0x88, 0xef, 0x1a, 0x22,
    0x12, 0x88, 0x9c, 0x3f, 0x8a, 0xc8, 0x9b, 0xc8, 0x55, 0x2d, 0x62, 0xa9,
    0x49, 0xea, 0x42, 0x13, 0x56, 0x84, 0x4d, 0x97, 0xf9, 0x31, 0x38, 0xb8,
    0xf6, 0xf0, 0x54, 0xc4, 0x1a, 0xb0, 0x77, 0xeb, 0xa1, 0x2b, 0x28, 0x5c,
    0x7a, 0xdc, 0x03, 0x85, 0x0b, 0x8f, 0xfb, 0x0f, 0x38, 0x7e, 0xf2, 0x51,
    0x24, 0xed, 0x49, 0x08, 0x9b, 0x13, 0x66, 0x75, 0x7a, 0xcb, 0xc1, 0xa9,
    0x6b, 0x2c, 0xef, 0x3a, 0xf8, 0x75, 0x8d, 0xd5, 0x7d, 0x87, 0xb5, 0xd9,
    0x71, 0x4e, 0xcb, 0x0d, 0xc2, 0x17, 0x8d, 0xb3, 0x43, 0x07, 0xd7, 0xd3,
    0xd8, 0x38, 0x72, 0xf0, 0xca, 0x8a, 0x10, 0xb7, 0xfa, 0xbb, 0xe3, 0x69,
    0xf6, 0x58, 0x81, 0xd8, 0x37, 0x6d, 0xd9, 0x3c, 0xf9, 0x83, 0x1c, 0xaf,
    0x4c, 0xe9, 0xf0, 0xf1, 0x17, 0x39, 0x6e, 0xbe, 0xb2, 0x40, 0xef, 0x72,
    0x3c, 0x04, 0x3f, 0x39, 0x9e, 0x1b, 0x21, 0x9c, 0x4c, 0xe4, 0x78, 0x20,
    0xad, 0x30, 0x91, 0xe3, 0x18, 0x3e, 0x01, 0x14, 0x66, 0x75, 0x7a, 0xdd,
    0x99, 0xf9, 0xc9, 0x6d, 0xf7, 0xa2, 0x52, 0xfd, 0x4e, 0xed, 0x18, 0xfb,
    0xd3, 0x39, 0x1d, 0xb1, 0xaf, 0x0c, 0x75, 0x7d, 0x44, 0xf8, 0x06, 0x80,
    0xd5, 0xb8, 0xa6, 0xe0, 0x74, 0xed, 0x51, 0x00, 0x00, 0x00, 0x00, 0x49,
    0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xb6, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd0, 0x21, 0x0e, 0xc2,
    0x40, 0x10, 0x85, 0xe1, 0x1f, 0x82, 0x58, 0x8d, 0xe2, 0x00, 0x5c, 0xa0,
    0x01, 0x03, 0x47, 0xd8, 0x33, 0x60, 0x7b, 0x0a, 0x6c, 0x4d, 0x13, 0x6c,
    0x15, 0xc1, 0xf5, 0x0c, 0x1b, 0x04, 0x24, 0x15, 0x50, 0x4c, 0x29, 0x04,
    0x81, 0x6a, 0xb2, 0x12, 0x57, 0x81, 0x20, 0x15, 0x24, 0x83, 0x40, 0x90,
    0x34, 0xd0, 0x72, 0x80, 0xfd, 0xcc, 0xe4, 0x8d, 0x98, 0x49, 0x1e, 0x38,
    0x8e, 0xf3, 0x53, 0xa7, 0xbe, 0xf0, 0xfc, 0x38, 0x53, 0xe8, 0x51, 0x85,
    0x41, 0xa1, 0xf9, 0x73, 0x1e, 0x0f, 0xcb, 0xfe, 0xb8, 0xf1, 0xd3, 0x24,
    0x2c, 0x65, 0x7f, 0x15, 0x91, 0x87, 0x88, 0x5c, 0x44, 0xe4, 0x2e, 0xb2,
    0xcd, 0xdf, 0x53, 0xf2, 0x2f, 0xb9, 0x14, 0xf1, 0xfc, 0x58, 0xea, 0x77,
    0xba, 0xf5, 0x45, 0x55, 0x18, 0xa6, 0x03, 0x88, 0x12, 0x8b, 0x55, 0x10,
    0xed, 0x2c, 0x03, 0x05, 0x8b, 0xc4, 0x92, 0xf7, 0x20, 0xd8, 0x58, 0x52,
    0x20, 0x58, 0x5b, 0xd2, 0x27, 0xac, 0xce, 0x37, 0x14, 0xba, 0xbd, 0x8a,
    0x79, 0x58, 0x66, 0xa6, 0x30, 0x23, 0x35, 0xd4, 0x54, 0x85, 0x41, 0x0f,
    0x35, 0xa6, 0x30, 0xb4, 0xe4, 0xe3, 0x69, 0x39, 0x6b, 0xae, 0xc2, 0x71,
    0x9c, 0x8f, 0x17, 0x82, 0xa8, 0x72, 0x4b, 0x56, 0xf8, 0x2b, 0x6f, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xbb, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x94, 0x4f, 0x68, 0x9b,
    0x75, 0x18, 0xc7, 0x3f, 0x5d, 0x33, 0x48, 0xdd, 0xaa, 0x7b, 0xa1, 0x39,
    0x74, 0x38, 0x58, 0xa0, 0x83, 0x6d, 0x27, 0x57, 0x41, 0xa8, 0x07, 0xd1,
    0xa0, 0x07, 0xa3, 0x17, 0xed, 0x29, 0xf3, 0x30, 0x11, 0x4f, 0x8d, 0x88,
    0x63, 0xdb, 0x69, 0xdb, 0xa1, 0x64, 0x3d, 0x8c, 0x58, 0x70, 0x98, 0x1d,
    0x2a, 0xcb, 0xa1, 0xb0, 0xb7, 0x83, 0xa2, 0x19, 0x76, 0x6d, 0x0a, 0x83,
    0xbc, 0xc2, 0x30, 0x71, 0x08, 0x6f, 0x82, 0x42, 0x56, 0x59, 0x46, 0x33,
    0x66, 0x49, 0x4a, 0x9d, 0x79, 0xe7, 0xfe, 0x90, 0xba, 0xbd, 0xed, 0xd7,
    0x43, 0xde, 0xa4, 0x6f, 0xeb, 0xb6, 0x93, 0x3e, 0x97, 0xe7, 0x79, 0x5e,
    0xf8, 0x7d, 0x7f, 0x9f, 0xe7, 0xfb, 0x3e, 0xef, 0x0b, 0xff, 0x53, 0x74,
    0xb5, 0x8b, 0xd4, 0x44, 0xea, 0xe6, 0x5b, 0xab, 0xcd, 0x81, 0xcc, 0xea,
    0xaa, 0x22, 0x6e, 0x64, 0x9b, 0xe5, 0x5a, 0x10, 0x00, 0x5c, 0x88, 0x06,
    0xa3, 0xeb, 0x56, 0xc0, 0x52, 0x34, 0x00, 0x59, 0x17, 0xa2, 0x81, 0x08,
    0x59, 0xd7, 0x22, 0x1a, 0xa0, 0x2b, 0xeb, 0x32, 0x7f, 0xe2, 0xd8, 0x89,
    0xf7, 0x9f, 0x79, 0x43, 0x39, 0x63, 0xaf, 0xab, 0x28, 0xe5, 0xcd, 0xbc,
    0x66, 0x2d, 0x5b, 0x8d, 0x45, 0xe9, 0xe2, 0x55, 0xa9, 0xb1, 0x28, 0x25,
    0xc6, 0x12, 0x52, 0x43, 0x4f, 0x8d, 0xf2, 0x8c, 0xbd, 0xf6, 0x34, 0xbd,
    0x6d, 0xed, 0x22, 0xb3, 0x90, 0x55, 0x61, 0xbe, 0x40, 0xd5, 0x08, 0xb2,
    0xb0, 0x6b, 0x90, 0xd2, 0xc3, 0x3a, 0x1f, 0xbd, 0x09, 0x99, 0x5b, 0x55,
    0x3e, 0x7c, 0xf7, 0x14, 0x67, 0xbe, 0x3e, 0x03, 0x4f, 0xa0, 0xf9, 0xc0,
    0x01, 0xa0, 0xf9, 0xa0, 0x09, 0x40, 0xb6, 0x62, 0xe9, 0x59, 0x2e, 0x00,
    0x90, 0x37, 0xf3, 0xba, 0x38, 0x93, 0x93, 0xfd, 0xb3, 0xa4, 0x9a, 0x87,
    0xd3, 0x90, 0xf4, 0x58, 0x4a, 0xce, 0x48, 0x8b, 0xbf, 0x7a, 0xe4, 0x92,
    0x74, 0xdf, 0x4f, 0x5c, 0x76, 0x3b, 0x76, 0xc6, 0x50, 0xf9, 0x74, 0x50,
    0x9b, 0x88, 0xad, 0x5b, 0x16, 0x91, 0xfd, 0x11, 0x16, 0x1e, 0x56, 0xa1,
    0x1f, 0xaa, 0xbf, 0x3b, 0x60, 0xc0, 0xdc, 0xf5, 0x2a, 0xd1, 0x97, 0x21,
    0x5d, 0x2a, 0x02, 0x50, 0xfc, 0xa9, 0x00, 0xab, 0xe0, 0x38, 0x8e, 0x47,
    0x9c, 0x05, 0x20, 0x19, 0x43, 0xf1, 0x29, 0xc1, 0xa1, 0x38, 0xe5, 0x18,
    0xea, 0x08, 0x47, 0x07, 0x22, 0x14, 0x96, 0x21, 0x3a, 0x10, 0xa6, 0x58,
    0x81, 0xf0, 0x1e, 0x03, 0x2a, 0xf0, 0xde, 0x2b, 0x61, 0xaa, 0x2e, 0x44,
    0x0f, 0x0c, 0x02, 0x30, 0x38, 0xf4, 0x3a, 0x04, 0xc0, 0x30, 0x8c, 0xd6,
    0xb9, 0x7d, 0x11, 0x52, 0x31, 0x74, 0x7c, 0x4a, 0x70, 0x39, 0x8e, 0xd1,
    0x3c, 0xb0, 0xf6, 0x83, 0x9f, 0x38, 0x7b, 0xcb, 0x22, 0xd2, 0x07, 0xe7,
    0xaf, 0x17, 0x31, 0x56, 0xc1, 0x9c, 0x2f, 0x52, 0x77, 0xe1, 0xbb, 0xeb,
    0x45, 0xc2, 0x40, 0x69, 0xa9, 0x48, 0x84, 0x08, 0x85, 0xad, 0xc4, 0x97,
    0x5e, 0xed, 0x8e, 0x4f, 0x89, 0x1b, 0x97, 0xe3, 0x38, 0x95, 0x7b, 0x98,
    0xb3, 0x9f, 0x76, 0x7f, 0x76, 0xc9, 0xe7, 0x73, 0x6e, 0x22, 0xa7, 0xc4,
    0x58, 0x42, 0xb5, 0x9b, 0x52, 0x6a, 0x46, 0x6a, 0xdc, 0x91, 0xbe, 0x2d,
    0x48, 0xb5, 0x1b, 0xd2, 0x85, 0x6c, 0x6b, 0x5b, 0xf2, 0x85, 0xfc, 0x86,
    0xf7, 0x92, 0x52, 0x31, 0x5a, 0xc5, 0xf4, 0x88, 0x6a, 0x93, 0x29, 0xa5,
    0x62, 0x74, 0x5e, 0x64, 0x37, 0xc0, 0xec, 0xd1, 0x91, 0xdf, 0xee, 0xee,
    0x35, 0xfa, 0x86, 0x77, 0x0d, 0x93, 0xbe, 0x76, 0x8e, 0xe3, 0x1f, 0xbc,
    0xc1, 0xf8, 0x8f, 0x45, 0x96, 0xfe, 0xec, 0xe7, 0xee, 0xa3, 0x1b, 0x1c,
    0xf8, 0xa5, 0x42, 0x89, 0x12, 0xc3, 0x43, 0xc3, 0x38, 0xae, 0x43, 0x8f,
    0xd1, 0xc3, 0x97, 0x87, 0xbb, 0xf8, 0x62, 0x4a, 0x14, 0xa7, 0xe2, 0xb0,
    0x78, 0x0f, 0xb3, 0x70, 0x96, 0xa3, 0x3e, 0xd2, 0x6e, 0xdb, 0xb4, 0xb5,
    0xb4, 0xbb, 0xa7, 0x2f, 0x1a, 0x8e, 0x12, 0xda, 0x1e, 0xa2, 0x2f, 0xd4,
    0xc7, 0xc4, 0xfc, 0x04, 0xd1, 0x17, 0xf7, 0x50, 0xbd, 0x3d, 0xc9, 0x6b,
    0x2f, 0xf4, 0x53, 0x0f, 0xd5, 0x39, 0xf2, 0xf1, 0x11, 0x70, 0xa1, 0xc7,
    0xe8, 0xe1, 0xbc, 0x27, 0xca, 0x54, 0x9c, 0xe0, 0xf6, 0x41, 0xa6, 0xaf,
    0x8d, 0x6d, 0x12, 0x05, 0x20, 0x31, 0x96, 0x50, 0xcd, 0xac, 0x29, 0x77,
    0x35, 0xa7, 0xf2, 0xb9, 0xb2, 0x1a, 0x8d, 0x86, 0x54, 0x53, 0x6b, 0x6c,
    0x7f, 0xbe, 0x96, 0x97, 0x1a, 0x52, 0xd2, 0x1b, 0xdf, 0x9e, 0x3e, 0xa6,
    0xda, 0xd8, 0x61, 0x25, 0x7d, 0xe3, 0x6f, 0x0a, 0xdb, 0xb4, 0x95, 0x1a,
    0x4f, 0xaa, 0x3c, 0x53, 0xde, 0x58, 0xce, 0xc6, 0x96, 0xbc, 0xb2, 0xc5,
    0xd3, 0xc9, 0x11, 0x35, 0xa6, 0x2f, 0x28, 0x15, 0x43, 0x76, 0xc6, 0x7e,
    0xba, 0x70, 0x3b, 0x92, 0xe3, 0x89, 0x35, 0x49, 0x2d, 0x62, 0x7f, 0x5e,
    0x69, 0xe5, 0x0e, 0x69, 0xfa, 0x13, 0xd5, 0x46, 0x0f, 0x77, 0xfa, 0xc4,
    0xd9, 0xc4, 0xf3, 0x85, 0xcb, 0x19, 0x7b, 0xed, 0x5f, 0xc4, 0x2b, 0x1b,
    0xfd, 0xec, 0xe9, 0x93, 0xd2, 0x74, 0x52, 0x35, 0xf3, 0x42, 0x47, 0xb4,
    0x65, 0x89, 0xad, 0xf6, 0x12, 0xf8, 0x23, 0xd0, 0x2e, 0xb2, 0x95, 0xac,
    0x0e, 0x32, 0x88, 0xf3, 0x87, 0x83, 0x11, 0x32, 0x3a, 0xb9, 0x5e, 0xaf,
    0x93, 0x1e, 0xd9, 0x8d, 0xb5, 0xbc, 0x97, 0x4c, 0xc9, 0x20, 0x4c, 0x89,
    0x53, 0x19, 0x51, 0xad, 0x56, 0x09, 0x87, 0xc3, 0x64, 0x16, 0x32, 0x00,
    0x2f, 0x01, 0xf7, 0x81, 0x35, 0xd8, 0xe2, 0xb9, 0x9d, 0xb1, 0x5d, 0x3d,
    0xde, 0x42, 0xea, 0xfd, 0x13, 0x00, 0xcd, 0xbe, 0x8d, 0x72, 0x57, 0x73,
    0xd2, 0x1d, 0x49, 0x05, 0x6f, 0xaa, 0x45, 0x29, 0x97, 0xce, 0x09, 0xd8,
    0x07, 0xec, 0xc0, 0xf7, 0xc1, 0xb5, 0x8b, 0x2e, 0xab, 0x92, 0x85, 0xed,
    0x5e, 0x17, 0xf2, 0x72, 0x2f, 0x34, 0x9b, 0x4d, 0x24, 0x71, 0xf0, 0x9b,
    0x45, 0x22, 0xef, 0x44, 0xa8, 0x53, 0x87, 0x21, 0x70, 0x5c, 0x07, 0xc2,
    0x60, 0x2d, 0x59, 0x00, 0x4d, 0xc0, 0xf5, 0xd3, 0x76, 0xbc, 0xf9, 0xea,
    0xf3, 0xd4, 0xa1, 0xc9, 0xb9, 0xc9, 0xfd, 0xc1, 0xe5, 0x20, 0xe6, 0x95,
    0x34, 0xc1, 0x95, 0x9d, 0x98, 0x57, 0x4c, 0x7a, 0x9d, 0x5e, 0xcc, 0x2b,
    0x69, 0xfa, 0x9b, 0x7b, 0x48, 0x7f, 0x9f, 0x56, 0x7f, 0xd3, 0xe8, 0x4a,
    0xcf, 0x4d, 0x12, 0xfa, 0x2b, 0x44, 0x7a, 0x2e, 0xcd, 0xe8, 0xc9, 0xd1,
    0x83, 0xc0, 0x0a, 0xf0, 0xb7, 0x5f, 0x78, 0xf3, 0x52, 0xb7, 0x3c, 0xdf,
    0xd1, 0x62, 0xa5, 0x17, 0xd8, 0xe9, 0x1b, 0xb1, 0xdb, 0x3b, 0xf8, 0xc4,
    0x23, 0x74, 0x3c, 0x5f, 0x1f, 0x79, 0xfd, 0xfa, 0xf3, 0x84, 0xdb, 0xcf,
    0xba, 0xbd, 0x1c, 0xf0, 0xf5, 0xdb, 0xbc, 0x83, 0x6d, 0x71, 0x77, 0x8b,
    0xd8, 0xf3, 0xd7, 0xee, 0xbf, 0x8a, 0x7f, 0x00, 0xaf, 0xf2, 0xce, 0xa4,
    0x19, 0xe5, 0x80, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x01,
    0xa7, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xa5, 0x93, 0x3d, 0x4b, 0xc3,
    0x50, 0x18, 0x46, 0x9f, 0x48, 0xd0, 0x2a, 0x56, 0xe8, 0xa0, 0xe0, 0x3f,
    0x10, 0x5c, 0x1d, 0xc4, 0xd1, 0xd1, 0xcd, 0x8c, 0x0e, 0x82, 0xb8, 0x55,
    0x9c, 0x74, 0xd4, 0xc5, 0x76, 0x09, 0xa9, 0x5b, 0xdd, 0xfd, 0x03, 0xea,
    0xe8, 0xa4, 0xa0, 0x52, 0x71, 0x71, 0x74, 0x71, 0xa8, 0xd0, 0x21, 0x85,
    0x2b, 0x24, 0x50, 0xe1, 0x56, 0x4a, 0xe1, 0x71, 0xb8, 0xf9, 0x68, 0x6f,
    0xd2, 0x24, 0xc5, 0xbb, 0x9c, 0xbc, 0x19, 0xde, 0x7b, 0x38, 0x21, 0xc0,
    0x3f, 0x0f, 0xd9, 0x32, 0x28, 0xac, 0x59, 0xb2, 0x65, 0x8c, 0xbe, 0x8f,
    0x06, 0xc7, 0xae, 0x5d, 0xc0, 0x2c, 0x9d, 0x63, 0xf8, 0x8b, 0x53, 0xf3,
    0x0c, 0x8d, 0x61, 0x1d, 0x30, 0x4b, 0xc8, 0x9e, 0x81, 0xca, 0xe2, 0x2f,
    0x0e, 0x77, 0x8f, 0xf0, 0xf8, 0x56, 0xc7, 0xf6, 0xc6, 0xfc, 0x35, 0xcc,
    0xaf, 0x23, 0x63, 0xe5, 0x56, 0xc6, 0x37, 0xbf, 0x72, 0xfa, 0x33, 0x08,
    0xe8, 0x35, 0x15, 0x3f, 0x4f, 0x48, 0xbe, 0xef, 0x53, 0x58, 0x73, 0x18,
    0x31, 0x26, 0x49, 0xb6, 0xdb, 0x6d, 0x92, 0xa4, 0xdb, 0x71, 0xd3, 0xe9,
    0x2a, 0x7a, 0xee, 0x3b, 0x49, 0x52, 0x7a, 0x8e, 0xa2, 0x94, 0x6a, 0xb9,
    0xd8, 0xbb, 0x27, 0xad, 0xf5, 0x74, 0xe3, 0x4e, 0x0e, 0xdd, 0x80, 0x42,
    0xc9, 0x50, 0x86, 0xe6, 0x0f, 0x24, 0x3f, 0x9e, 0x28, 0xac, 0xad, 0x84,
    0xf1, 0x44, 0xd3, 0x49, 0xc6, 0xc1, 0x72, 0xd9, 0x6b, 0x93, 0x74, 0x48,
    0x61, 0x35, 0x49, 0x6b, 0x2d, 0xdd, 0x38, 0x34, 0xd2, 0x0d, 0x75, 0x0a,
    0xcd, 0xfc, 0xb9, 0x4a, 0xb2, 0xb5, 0x49, 0x61, 0x2d, 0x4d, 0x36, 0x76,
    0xd3, 0x4d, 0x23, 0x63, 0xe1, 0x05, 0x54, 0xdf, 0x84, 0x83, 0x0f, 0xf2,
    0x4a, 0x92, 0x62, 0x67, 0x81, 0xb4, 0x8c, 0xa4, 0xb1, 0x28, 0x62, 0xa8,
    0x51, 0xdd, 0x41, 0xc7, 0xae, 0x31, 0xdc, 0x37, 0x13, 0x3e, 0x34, 0x5e,
    0xea, 0x00, 0x80, 0xee, 0xb0, 0x0b, 0xac, 0x02, 0xdd, 0xae, 0x4e, 0x1f,
    0x58, 0x06, 0xfc, 0x6f, 0x8d, 0xbe, 0x0f, 0x54, 0x82, 0x25, 0x66, 0x29,
    0xe5, 0x0f, 0x1a, 0x6d, 0x1c, 0x9a, 0x4c, 0x32, 0xf5, 0xd2, 0xe9, 0xd8,
    0x0e, 0x13, 0x8b, 0xa3, 0xc6, 0x89, 0x86, 0xfa, 0x1c, 0xd0, 0x1b, 0x27,
    0x49, 0xf2, 0x92, 0xc9, 0xc5, 0xa9, 0xc6, 0x05, 0x4d, 0xd9, 0x2b, 0xd0,
    0xf8, 0xe6, 0xee, 0x26, 0xb3, 0xa5, 0xce, 0xfe, 0x4f, 0x1f, 0x28, 0x17,
    0x6d, 0xac, 0x9b, 0xe7, 0x98, 0xc6, 0xc6, 0x19, 0x8d, 0xf3, 0x5a, 0x86,
    0x94, 0x3d, 0x39, 0xc6, 0xe9, 0x1a, 0xe7, 0x18, 0x46, 0x94, 0x05, 0x1a,
    0x8f, 0xb5, 0xad, 0x00, 0xbe, 0xdf, 0x8f, 0x9b, 0x96, 0xe3, 0xa6, 0x63,
    0x9c, 0x2f, 0xda, 0xb8, 0xa0, 0xa1, 0xce, 0xcc, 0xc6, 0xff, 0x3a, 0xa9,
    0x8d, 0x9f, 0x59, 0x73, 0xec, 0x1a, 0xf9, 0xaa, 0x6e, 0x56, 0x9c, 0x6e,
    0xae, 0x1e, 0x57, 0x0f, 0xc2, 0x7d, 0x46, 0xe2, 0x86, 0xec, 0xf7, 0x79,
    0x27, 0x32, 0xfe, 0x03, 0xcf, 0x57, 0xc9, 0x0a, 0x22, 0x05, 0xcf, 0x99,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0x46, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x95, 0x41, 0x68, 0x13,
    0x79, 0x18, 0xc5, 0x9f, 0x6d, 0xc1, 0x22, 0x76, 0xa1, 0x87, 0x80, 0x3d,
    0x2c, 0x58, 0x70, 0x2f, 0x82, 0x2e, 0x5b, 0xd9, 0xc5, 0x42, 0x0f, 0x1b,
    0x15, 0x0f, 0x55, 0x50, 0x52, 0x2a, 0x6c, 0xa0, 0x2c, 0x96, 0xf5, 0x60,
    0x57, 0x51, 0xa9, 0xca, 0x1e, 0x04, 0x5d, 0xa7, 0x3d, 0x48, 0xeb, 0xa1,
    0x90, 0xae, 0x14, 0x92, 0xc3, 0xc0, 0x0c, 0x42, 0x1d, 0x7a, 0x28, 0x63,
    0x0e, 0xc1, 0x74, 0x97, 0xea, 0xa4, 0xdd, 0x4a, 0x52, 0x50, 0x67, 0x0a,
    0xa9, 0x4c, 0x21, 0xe2, 0x90, 0xd6, 0xee, 0x10, 0xaa, 0x3b, 0x86, 0x98,
    0xfa, 0x3c, 0xcc, 0x24, 0xa6, 0xb1, 0xa5, 0x56, 0xf0, 0xbb, 0xfc, 0x78,
    0xf3, 0xfe, 0xf3, 0xfd, 0xdf, 0xff, 0x9b, 0x19, 0x06, 0xd8, 0xa0, 0x68,
    0xf2, 0x94, 0x24, 0x4b, 0xa4, 0x49, 0x4a, 0x62, 0xf8, 0xb3, 0x18, 0x16,
    0xc3, 0xc2, 0x46, 0xfd, 0xca, 0xa5, 0x8c, 0x49, 0xdc, 0x4a, 0x39, 0x2b,
    0x0e, 0x29, 0x93, 0xe5, 0x06, 0xfa, 0x88, 0x7e, 0x20, 0xd8, 0x15, 0xcc,
    0xea, 0x23, 0x7a, 0x36, 0xd8, 0x15, 0x5c, 0xd4, 0x47, 0xf4, 0xc5, 0x9e,
    0xb3, 0x3d, 0xaf, 0x68, 0x6d, 0xa1, 0x6b, 0xc1, 0x85, 0x32, 0xa6, 0x7c,
    0x6c, 0xdc, 0x7e, 0xbc, 0x3d, 0xc9, 0x02, 0x19, 0x9f, 0x88, 0xb3, 0xcc,
    0x0c, 0xa9, 0x4d, 0x6a, 0x24, 0xc9, 0xe4, 0x4c, 0x92, 0xb4, 0x49, 0x75,
    0x5c, 0xdd, 0x98, 0x24, 0x6d, 0xdb, 0x26, 0x33, 0x15, 0x89, 0xb5, 0x93,
    0xda, 0xbf, 0x6a, 0x54, 0xa5, 0x13, 0x73, 0x28, 0xfc, 0x29, 0x90, 0x09,
    0x52, 0x19, 0xf5, 0xc6, 0xb0, 0x52, 0x3a, 0x67, 0x15, 0x57, 0xb8, 0xae,
    0x2f, 0xc9, 0xd2, 0x9a, 0xc4, 0x31, 0x3a, 0x64, 0x68, 0x28, 0x44, 0x0e,
    0x93, 0x92, 0xd7, 0xd4, 0x59, 0x71, 0x57, 0x87, 0x23, 0x61, 0x32, 0xe3,
    0xde, 0x54, 0xa6, 0x4c, 0x4a, 0xa2, 0xab, 0xb5, 0x84, 0x7b, 0x32, 0x2d,
    0xa1, 0x91, 0x4b, 0x6b, 0x13, 0x6b, 0x6a, 0x54, 0x2d, 0xd0, 0x20, 0x07,
    0xfa, 0x05, 0xd2, 0x24, 0xb9, 0xe4, 0x25, 0x49, 0xf1, 0xe3, 0x38, 0x2a,
    0x75, 0xca, 0xd3, 0x33, 0x15, 0x7e, 0x9a, 0x54, 0xc7, 0x95, 0xc1, 0x72,
    0xe3, 0x40, 0x67, 0xe0, 0x0e, 0x23, 0x2c, 0x48, 0xb2, 0x44, 0x0e, 0x93,
    0x56, 0xc6, 0x2a, 0x3f, 0x08, 0x37, 0x59, 0x98, 0x14, 0x49, 0x29, 0xe2,
    0x32, 0xec, 0x51, 0x92, 0x25, 0xd2, 0x22, 0xad, 0x8c, 0x49, 0x8a, 0xa4,
    0x32, 0xae, 0xdc, 0x5e, 0xf3, 0x5a, 0x25, 0x87, 0x92, 0x57, 0x85, 0x7e,
    0xe1, 0x7f, 0x9a, 0xa4, 0x32, 0x26, 0x91, 0x0e, 0xd9, 0x7d, 0x25, 0xc4,
    0x56, 0x91, 0xfc, 0xe1, 0x8c, 0x44, 0xc5, 0x63, 0xb5, 0xf6, 0x8b, 0x64,
    0xeb, 0xd9, 0xf5, 0xfd, 0xe0, 0xa5, 0xd0, 0x14, 0x02, 0x9d, 0x81, 0x53,
    0xd6, 0x15, 0x2b, 0x57, 0x9a, 0xad, 0x70, 0x6b, 0x80, 0x24, 0x19, 0x4f,
    0xb9, 0xc9, 0xe3, 0x4f, 0xaa, 0x69, 0x6f, 0xca, 0xc0, 0x79, 0xe6, 0x90,
    0x1c, 0x4a, 0x1e, 0xe9, 0x39, 0xdf, 0xf3, 0x8a, 0x19, 0x92, 0x16, 0xa9,
    0x8d, 0x92, 0xea, 0x8c, 0x3b, 0xe7, 0x81, 0xb1, 0x2f, 0x60, 0x81, 0xf4,
    0x9f, 0x09, 0x2d, 0xd7, 0x2e, 0x37, 0x2c, 0xbf, 0x2d, 0xe6, 0x8b, 0xbf,
    0xe5, 0xeb, 0x72, 0x0d, 0xfb, 0xdb, 0x5a, 0x70, 0x31, 0x32, 0x8c, 0x6b,
    0xdd, 0x3f, 0x61, 0x30, 0x66, 0xe0, 0x72, 0x9b, 0x0f, 0x83, 0x8f, 0x0c,
    0xa0, 0xcd, 0x87, 0xc4, 0xa3, 0xcf, 0xd3, 0xc3, 0x0f, 0x52, 0x9c, 0x7d,
    0x7e, 0x62, 0x1e, 0x00, 0xd0, 0x7d, 0xba, 0xfb, 0x25, 0x97, 0x48, 0x6d,
    0x32, 0x4e, 0x1a, 0x5f, 0x9e, 0x38, 0x1c, 0x23, 0x69, 0xb2, 0x18, 0xfc,
    0x25, 0x70, 0xa4, 0x16, 0x00, 0x9a, 0x77, 0x37, 0x9f, 0xab, 0x6b, 0x2c,
    0x36, 0x8e, 0xc7, 0x9f, 0x22, 0xd7, 0x50, 0x87, 0x8e, 0xb6, 0x6f, 0x31,
    0xf8, 0xc0, 0x00, 0x0e, 0xfa, 0x90, 0x48, 0x18, 0xb8, 0x7c, 0xd0, 0x87,
    0xbe, 0x84, 0x81, 0xba, 0x4d, 0xf4, 0xc5, 0xa3, 0x3e, 0xfc, 0x1e, 0xb9,
    0x5f, 0xc8, 0x67, 0xe7, 0xae, 0x01, 0x00, 0x82, 0x5d, 0xc1, 0x7b, 0x9c,
    0x24, 0x85, 0x21, 0x85, 0x24, 0x19, 0x8a, 0x92, 0x8e, 0x45, 0x0a, 0xa3,
    0xa4, 0x93, 0x21, 0x85, 0x51, 0xdd, 0x63, 0x85, 0xae, 0xf2, 0x69, 0x93,
    0xd2, 0x04, 0xe9, 0x8f, 0x30, 0x0d, 0x00, 0xb5, 0x00, 0xf0, 0xe3, 0xf7,
    0xfb, 0xbe, 0x7b, 0x6c, 0xcf, 0x1e, 0xbe, 0xf1, 0xeb, 0x39, 0x44, 0xa6,
    0x17, 0xf0, 0xe2, 0xbf, 0x46, 0x3c, 0x7c, 0x6e, 0xe0, 0x02, 0x7c, 0xb8,
    0x95, 0x31, 0x50, 0x7c, 0xbf, 0x17, 0x0f, 0x4d, 0x4f, 0x9b, 0x06, 0x8a,
    0xd8, 0xfb, 0x89, 0x9f, 0x5a, 0x5c, 0xc0, 0x09, 0xbd, 0xf1, 0xdd, 0xdf,
    0xff, 0x74, 0xf4, 0xce, 0x19, 0x73, 0x4f, 0x00, 0x60, 0xbb, 0xff, 0x67,
    0xff, 0x71, 0x53, 0x36, 0x57, 0xd5, 0x84, 0x3b, 0xab, 0x5e, 0x91, 0xb4,
    0xd2, 0x64, 0xaf, 0xa8, 0xd3, 0x4e, 0x6f, 0xae, 0x4b, 0x33, 0xf6, 0x9f,
    0x16, 0x5e, 0x96, 0xbe, 0x8f, 0x5a, 0x00, 0xbb, 0xf2, 0x6f, 0xf2, 0x7b,
    0x16, 0x56, 0x17, 0x3a, 0x5f, 0x7c, 0xd3, 0x81, 0xa8, 0x91, 0xc2, 0x1f,
    0x68, 0x42, 0x9f, 0x99, 0x42, 0x11, 0xfb, 0x31, 0x61, 0xa6, 0x50, 0x44,
    0x13, 0x26, 0x2b, 0x74, 0xb5, 0xdf, 0x7f, 0xb8, 0x09, 0x7d, 0xf7, 0x27,
    0x56, 0xb3, 0xe9, 0x19, 0x71, 0xfe, 0xd9, 0xe3, 0x18, 0x00, 0xd6, 0x00,
    0x78, 0x9d, 0x5d, 0xce, 0xa6, 0xdb, 0x9f, 0x1e, 0xba, 0x39, 0x35, 0x2d,
    0x63, 0xb6, 0xbe, 0x05, 0xc7, 0xa6, 0x65, 0x1c, 0xaa, 0x6f, 0x41, 0x49,
    0x4f, 0x55, 0xe9, 0x6a, 0xbf, 0xe5, 0xba, 0x8c, 0xe6, 0x5c, 0xeb, 0x7c,
    0xf4, 0xee, 0x5f, 0x32, 0x80, 0x9d, 0x00, 0xb0, 0xcd, 0x4b, 0x5e, 0x0f,
    0x60, 0x87, 0x77, 0x71, 0x27, 0x80, 0x9a, 0x4d, 0x7f, 0x31, 0x6b, 0x8b,
    0x00, 0x0a, 0x00, 0x1c, 0x00, 0x36, 0x80, 0xb7, 0xdb, 0xd6, 0x59, 0x54,
    0x53, 0xb1, 0xe1, 0x56, 0xeb, 0xbd, 0xb7, 0xc9, 0xd7, 0xab, 0x0f, 0x24,
    0xc4, 0x5c, 0xf1, 0x41, 0xc6, 0x73, 0x17, 0x00, 0x00, 0x00, 0x00, 0x49,
    0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image5_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xbc, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xa5, 0x94, 0x51, 0x68, 0x5b,
    0x55, 0x18, 0xc7, 0xff, 0x69, 0xe3, 0xe8, 0x95, 0x09, 0xb9, 0xb0, 0xca,
    0x0a, 0xfa, 0x50, 0x04, 0xa1, 0xe0, 0x24, 0xca, 0xc0, 0x25, 0x6e, 0x0f,
    0xcd, 0xd8, 0xc3, 0x1a, 0xec, 0x20, 0xa3, 0x45, 0xea, 0x5b, 0x45, 0x25,
    0x37, 0x4c, 0xb8, 0xbd, 0x57, 0x44, 0x7a, 0x07, 0xd6, 0xa6, 0xe0, 0x4c,
    0x42, 0x29, 0x26, 0x3e, 0xc8, 0x3a, 0x88, 0x98, 0x87, 0x96, 0xce, 0x87,
    0x90, 0xb6, 0xa0, 0x2c, 0x48, 0x97, 0xb6, 0x5a, 0x97, 0x4c, 0x1a, 0x92,
    0x49, 0xbb, 0x65, 0x9a, 0xc1, 0x69, 0x5c, 0x6b, 0x13, 0x4a, 0x48, 0xee,
    0x58, 0xec, 0xe7, 0xc3, 0x49, 0xd2, 0x64, 0x1b, 0x5d, 0x87, 0xdf, 0xcb,
    0xff, 0x7e, 0xe7, 0x7c, 0xe7, 0x7f, 0x7f, 0xf7, 0x3b, 0xf7, 0x1c, 0xa0,
    0x21, 0xa4, 0xb1, 0xe1, 0xc9, 0xc5, 0x39, 0xfa, 0xc7, 0xe2, 0xf4, 0x90,
    0x25, 0x48, 0x64, 0x71, 0x7a, 0x68, 0x26, 0x48, 0xd4, 0x7d, 0xc1, 0x53,
    0x8c, 0x87, 0x4b, 0x2b, 0xca, 0x98, 0xe3, 0x6d, 0x1c, 0x30, 0x5a, 0x6b,
    0x0f, 0xfe, 0xa0, 0x62, 0x5e, 0xc8, 0x7c, 0xe9, 0xbf, 0xdb, 0x12, 0xc5,
    0xd4, 0x47, 0xef, 0x55, 0x6e, 0x6f, 0xa4, 0x5b, 0xa7, 0x9c, 0xe7, 0x0c,
    0x57, 0xfe, 0x4a, 0xc3, 0xf4, 0xe2, 0xb9, 0x43, 0xf3, 0xbf, 0x4f, 0x3c,
    0xc8, 0xed, 0xb4, 0xbf, 0x7b, 0xe6, 0x4c, 0xc7, 0xdf, 0xbf, 0x2d, 0x24,
    0x93, 0x07, 0x72, 0xf7, 0x07, 0x15, 0x73, 0x7c, 0x8e, 0xee, 0x48, 0x41,
    0x7a, 0x78, 0x2d, 0x4c, 0xff, 0x76, 0xcb, 0x97, 0x77, 0x23, 0x21, 0xa2,
    0x9e, 0x8b, 0xdf, 0x53, 0x66, 0x8d, 0x48, 0x99, 0x4e, 0x11, 0xcb, 0x12,
    0xf5, 0x8c, 0xcc, 0x50, 0x77, 0x88, 0x4a, 0xd2, 0xc8, 0xc0, 0xd9, 0x03,
    0x11, 0x1f, 0x3d, 0x66, 0x0b, 0x26, 0x8b, 0x89, 0x1d, 0xfd, 0xbe, 0x55,
    0xdf, 0x2a, 0xbe, 0x2f, 0x7f, 0x37, 0x32, 0xd2, 0xd7, 0xf9, 0xd6, 0xfa,
    0xaf, 0x77, 0xb7, 0x3f, 0xef, 0x0d, 0xff, 0x11, 0x3a, 0xd4, 0xf6, 0xfc,
    0x69, 0xc3, 0xdc, 0x5a, 0x02, 0xa6, 0xc3, 0xa7, 0xf1, 0x20, 0x1b, 0x6a,
    0xdd, 0xd8, 0x3a, 0xdc, 0x7b, 0xde, 0xfe, 0xdc, 0xd7, 0xcb, 0x3f, 0xaf,
    0x3f, 0xdc, 0xd7, 0xdd, 0x21, 0x8f, 0xde, 0x61, 0x4b, 0xf4, 0xc3, 0xe5,
    0x90, 0xd4, 0xd1, 0x38, 0x3e, 0xec, 0x93, 0x94, 0x48, 0x88, 0xc8, 0xe1,
    0x23, 0x8a, 0x27, 0x88, 0x06, 0x02, 0x8b, 0x94, 0x5a, 0x23, 0x72, 0x7c,
    0x36, 0x9a, 0x4c, 0xfd, 0xc8, 0x82, 0xfb, 0x79, 0x1a, 0x00, 0x60, 0xf0,
    0x22, 0x0b, 0x77, 0x18, 0xdd, 0xab, 0x7a, 0x01, 0xc3, 0x65, 0x00, 0x1a,
    0x34, 0xb8, 0xe1, 0x86, 0xd8, 0x26, 0x20, 0xba, 0x75, 0x14, 0x9d, 0x66,
    0x15, 0xa8, 0x44, 0x01, 0xa3, 0x0d, 0xa8, 0x44, 0x61, 0xd2, 0x6d, 0xc8,
    0xe5, 0x34, 0x74, 0x22, 0x8f, 0xc6, 0x7a, 0x01, 0xf8, 0xd4, 0x37, 0xfe,
    0xcd, 0x57, 0x7b, 0x64, 0x97, 0x06, 0x9d, 0xdb, 0x61, 0x46, 0x54, 0x22,
    0x1e, 0x0d, 0x6a, 0x09, 0x12, 0x0d, 0x4c, 0x5c, 0xe3, 0xc4, 0x13, 0x9c,
    0x7c, 0x70, 0x32, 0x4e, 0x33, 0x41, 0x7a, 0xac, 0x5e, 0x91, 0x25, 0xaa,
    0x79, 0xb6, 0x00, 0x80, 0x9e, 0x6b, 0x5b, 0x0f, 0x24, 0x27, 0x01, 0x01,
    0x28, 0x97, 0xcb, 0x80, 0x00, 0xe4, 0x37, 0xf3, 0x80, 0x00, 0x20, 0xe6,
    0x05, 0x8c, 0x36, 0x8c, 0xfd, 0x34, 0x0b, 0x18, 0x01, 0xdf, 0xf5, 0x28,
    0x60, 0x7c, 0x13, 0xbe, 0x98, 0xb7, 0xa9, 0x2e, 0xbf, 0x99, 0x87, 0xf7,
    0x88, 0x17, 0x92, 0x2c, 0x99, 0xeb, 0xc6, 0x00, 0x5e, 0xd1, 0xfa, 0x34,
    0x20, 0x0f, 0x08, 0x82, 0x00, 0x94, 0x01, 0xfb, 0xbc, 0x08, 0xab, 0xe4,
    0x85, 0x72, 0x52, 0x05, 0x2a, 0x80, 0x72, 0xca, 0x0e, 0x54, 0xa2, 0x50,
    0x4e, 0xd9, 0xf8, 0x8a, 0x93, 0x2a, 0xac, 0x1f, 0x07, 0x10, 0x9d, 0x17,
    0x81, 0x7b, 0x80, 0xd8, 0x2e, 0x22, 0x60, 0xba, 0x02, 0xcd, 0xa2, 0xbd,
    0x5a, 0x37, 0x56, 0xa0, 0xf5, 0x26, 0x8a, 0x09, 0x40, 0x6c, 0x26, 0xed,
    0x3a, 0xae, 0x62, 0xae, 0x92, 0x80, 0xe9, 0x08, 0xe0, 0xbb, 0x3e, 0x0b,
    0xbd, 0x62, 0xe3, 0xc4, 0x3a, 0xd0, 0x59, 0x5c, 0x42, 0xd7, 0x6b, 0x2e,
    0x4e, 0xfe, 0x32, 0x5f, 0xe7, 0x92, 0x5c, 0x70, 0x2f, 0xbb, 0x8f, 0xd5,
    0x7b, 0xac, 0xc8, 0x12, 0x6f, 0x12, 0xab, 0xf6, 0x6c, 0x9b, 0x8b, 0xe5,
    0x82, 0x9f, 0x52, 0x69, 0x22, 0xc7, 0xa5, 0x08, 0x2d, 0x2e, 0x54, 0x75,
    0x89, 0x6b, 0x6a, 0x95, 0xcf, 0x37, 0xd6, 0xd3, 0x36, 0x11, 0x9b, 0x66,
    0x04, 0x00, 0x06, 0x49, 0x96, 0xcc, 0x62, 0x9b, 0x78, 0x53, 0xf9, 0x44,
    0x81, 0x28, 0x8a, 0xc8, 0x6f, 0xe6, 0x21, 0xb6, 0xef, 0xa9, 0xf5, 0x43,
    0x2f, 0xba, 0x4e, 0xa8, 0xc8, 0xe5, 0x66, 0xd1, 0x66, 0xb4, 0x03, 0x98,
    0x85, 0xc9, 0x64, 0xc7, 0xad, 0x1b, 0x5e, 0x2c, 0x7d, 0xab, 0xd6, 0xeb,
    0xca, 0xe5, 0x32, 0x04, 0x41, 0x80, 0xf6, 0x85, 0x06, 0xbd, 0x90, 0x7f,
    0x03, 0x6c, 0x9a, 0xf5, 0xfb, 0x27, 0xfc, 0xcd, 0xc4, 0xa5, 0x47, 0xc8,
    0x9d, 0x9e, 0x3a, 0x79, 0x6a, 0x95, 0xe7, 0x4d, 0xa4, 0x8d, 0xf5, 0x2b,
    0x44, 0x8a, 0x2c, 0xf5, 0x43, 0x92, 0xa5, 0x51, 0xda, 0x21, 0x62, 0x8c,
    0xed, 0x12, 0x11, 0x6d, 0x33, 0x5e, 0x5d, 0x2a, 0x95, 0x9a, 0xd4, 0xf2,
    0x81, 0x87, 0x06, 0x27, 0xf7, 0x3e, 0xbf, 0x36, 0xce, 0x18, 0xa7, 0x61,
    0x59, 0x46, 0x44, 0xb4, 0x1b, 0x09, 0x47, 0x88, 0xc9, 0x6c, 0xbc, 0x45,
    0x3d, 0xae, 0xbe, 0x9e, 0xfe, 0x33, 0x0d, 0xc4, 0x60, 0x50, 0x87, 0x5c,
    0xd0, 0x63, 0x3a, 0xd4, 0x21, 0x17, 0x0a, 0x91, 0x42, 0x93, 0x5e, 0x3d,
    0x7b, 0x1e, 0xb7, 0x6e, 0x78, 0x71, 0xb5, 0xbb, 0xa7, 0x69, 0x1c, 0x31,
    0x70, 0xfd, 0x05, 0x50, 0x87, 0x5c, 0x06, 0xfb, 0x3b, 0x76, 0xb8, 0x75,
    0xed, 0x05, 0x48, 0xd5, 0x8d, 0xab, 0x69, 0x26, 0x93, 0x39, 0xb0, 0x02,
    0xa8, 0xe7, 0x2c, 0xc3, 0x88, 0xc9, 0x8c, 0x4a, 0xa5, 0x12, 0x3f, 0x28,
    0x6c, 0x9a, 0x11, 0x65, 0xf9, 0x6e, 0xd2, 0xfd, 0x6a, 0xaf, 0x56, 0xb8,
    0xc4, 0x57, 0xe2, 0xfb, 0xe6, 0x00, 0xf8, 0xc3, 0x0e, 0x97, 0xda, 0xdf,
    0xa5, 0xc8, 0x12, 0x3d, 0x46, 0x5c, 0x5b, 0xfc, 0x34, 0x6d, 0x32, 0xa6,
    0x3d, 0x63, 0x96, 0xe5, 0xe4, 0xcd, 0xc4, 0xcf, 0x18, 0x4f, 0x32, 0xae,
    0xa9, 0xd1, 0xbd, 0xec, 0x46, 0xa0, 0x2f, 0x00, 0xf7, 0xb8, 0x1b, 0xda,
    0x72, 0xfd, 0x96, 0x7a, 0xf4, 0xd6, 0x7a, 0x62, 0xce, 0x64, 0x06, 0xd7,
    0x90, 0xab, 0x69, 0x7e, 0xe3, 0xde, 0x06, 0x3f, 0x75, 0x6c, 0x9a, 0x11,
    0x25, 0x68, 0x97, 0x88, 0x88, 0xb2, 0xd5, 0x57, 0xff, 0x3f, 0xdd, 0x55,
    0x64, 0x89, 0x0c, 0x8e, 0x3e, 0x47, 0xbf, 0xff, 0x25, 0xff, 0xd4, 0xb3,
    0x90, 0x3e, 0x2d, 0x2f, 0xe4, 0x0a, 0xd6, 0xff, 0x00, 0x9a, 0xb1, 0x0c,
    0xed, 0xcc, 0x94, 0x6b, 0x9d, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image6_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0xa9, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xad, 0x94, 0x31, 0x4c, 0xdb,
    0x40, 0x14, 0x86, 0xff, 0x74, 0x32, 0x5b, 0xc6, 0x1b, 0xbd, 0x86, 0xa9,
    0xe9, 0x04, 0x1b, 0xd9, 0xaa, 0x4e, 0x55, 0xbb, 0x01, 0x1d, 0x5a, 0xe8,
    0x40, 0xcc, 0x82, 0x94, 0x05, 0x85, 0x4e, 0x88, 0x29, 0x61, 0xb3, 0xdb,
    0x25, 0xe9, 0x64, 0xb3, 0xd4, 0x49, 0xa5, 0x8a, 0x06, 0x09, 0x09, 0x2a,
    0x55, 0x02, 0x24, 0x24, 0xd8, 0x60, 0xaa, 0xc2, 0xe6, 0x6e, 0xc0, 0x44,
    0xbc, 0x7d, 0x1d, 0x6c, 0x87, 0x90, 0x00, 0x22, 0x52, 0xdf, 0xf2, 0xdf,
    0x7b, 0x4f, 0xf7, 0xeb, 0xbf, 0x7b, 0xff, 0x9d, 0xf4, 0x40, 0x00, 0xec,
    0xed, 0xef, 0x01, 0xc0, 0x69, 0x02, 0x27, 0xa7, 0x27, 0xc9, 0xe2, 0x30,
    0x81, 0x7e, 0x7f, 0x1f, 0x1e, 0xe2, 0x19, 0x89, 0x6c, 0x53, 0x14, 0x45,
    0xf7, 0xe2, 0xe5, 0xe5, 0x25, 0x00, 0xdd, 0x6e, 0x17, 0x18, 0x83, 0x78,
    0x50, 0xd9, 0xc1, 0xe1, 0xc1, 0x1d, 0xe5, 0xfd, 0x7c, 0xa0, 0xff, 0x64,
    0xe2, 0xed, 0xce, 0xf6, 0x9d, 0xe3, 0x0e, 0x63, 0xd6, 0x0f, 0xdb, 0xe1,
    0xd3, 0x15, 0x8f, 0x28, 0x1d, 0xce, 0xf7, 0xef, 0xe6, 0x63, 0x5d, 0xc3,
    0x43, 0x4a, 0x33, 0xcc, 0x48, 0xb7, 0x3b, 0xdb, 0xe3, 0x0f, 0xee, 0xbe,
    0xe9, 0xdf, 0x77, 0x92, 0xff, 0xaa, 0x78, 0xf0, 0xae, 0x9f, 0x4c, 0x9c,
    0x0d, 0x84, 0xc4, 0x59, 0xd0, 0x7d, 0x04, 0x6f, 0xc0, 0x0f, 0xfc, 0xc7,
    0x95, 0x03, 0x34, 0x9a, 0x0d, 0x58, 0xba, 0x9d, 0x7a, 0xf6, 0x28, 0x86,
    0x31, 0xf3, 0xaf, 0xbb, 0xe9, 0x32, 0xfb, 0x7a, 0x96, 0xd2, 0x4c, 0x89,
    0xf2, 0x52, 0x79, 0xf4, 0x04, 0x00, 0xae, 0xd7, 0x80, 0x63, 0xa8, 0xae,
    0xac, 0xc3, 0x6f, 0xa8, 0xae, 0x54, 0xef, 0xc5, 0xf5, 0xd5, 0x1a, 0x1c,
    0x43, 0x6d, 0xc3, 0x85, 0x5d, 0x98, 0x9e, 0x2a, 0x61, 0xdb, 0x27, 0x18,
    0x63, 0x53, 0x9a, 0x29, 0xe1, 0x07, 0x3e, 0x77, 0x95, 0x02, 0x51, 0x94,
    0xbe, 0xa8, 0xf3, 0x44, 0xd1, 0xd9, 0x30, 0x9e, 0x26, 0x38, 0x7b, 0x3a,
    0x0b, 0x80, 0xdf, 0xf4, 0x29, 0xcd, 0x94, 0xb0, 0x8d, 0x8d, 0x6d, 0x6c,
    0x4c, 0xde, 0x30, 0x3d, 0x55, 0x22, 0x25, 0xf5, 0x19, 0x27, 0x0a, 0x14,
    0xb0, 0xb0, 0x28, 0x50, 0x00, 0xa0, 0xb6, 0xea, 0x52, 0x7c, 0x5e, 0xc4,
    0x18, 0x9b, 0x7c, 0x3e, 0x8f, 0x6d, 0x6c, 0x14, 0x06, 0xe1, 0x58, 0xa4,
    0x11, 0x11, 0x65, 0x3e, 0x50, 0xa4, 0x48, 0x95, 0x6a, 0xbf, 0x5e, 0x5d,
    0xa9, 0x62, 0x8c, 0x8d, 0xa4, 0x84, 0x98, 0x1b, 0x38, 0x3b, 0x4f, 0xbb,
    0xa9, 0x2f, 0xcf, 0xce, 0xcf, 0x92, 0x45, 0x56, 0xcf, 0x5c, 0x70, 0x9e,
    0xf5, 0xd3, 0x3c, 0xfb, 0xf5, 0x0e, 0x4f, 0xa0, 0x0b, 0x26, 0x6f, 0x90,
    0x84, 0x31, 0x36, 0xcf, 0xbc, 0x2f, 0x9e, 0x26, 0x0b, 0x52, 0xeb, 0xfb,
    0x4f, 0xe9, 0x42, 0x0a, 0xb6, 0x5a, 0x9a, 0x3c, 0x9a, 0x54, 0xb0, 0xd5,
    0x92, 0x8e, 0xa4, 0xe0, 0x6b, 0x4b, 0xfa, 0x25, 0x05, 0x5b, 0x41, 0x9a,
    0x07, 0x9a, 0x3c, 0x92, 0x5a, 0x5f, 0x93, 0xbe, 0xf7, 0xb9, 0xa9, 0xfd,
    0xa3, 0x17, 0x72, 0xd6, 0x1d, 0xc5, 0xa9, 0x11, 0x2c, 0x49, 0xa2, 0x0b,
    0x61, 0x3b, 0xb1, 0x96, 0xdf, 0x0c, 0x13, 0x5f, 0x36, 0x7d, 0xb8, 0x1c,
    0xc5, 0xc6, 0x20, 0x46, 0xd0, 0xf0, 0x1a, 0x10, 0xa5, 0xee, 0xf8, 0x01,
    0xf9, 0xbe, 0x62, 0x83, 0x5c, 0xcf, 0x85, 0x66, 0x4a, 0xda, 0x4c, 0x37,
    0x0d, 0xa3, 0x97, 0xba, 0xc6, 0x4b, 0xc9, 0x06, 0xd0, 0xdd, 0x74, 0x61,
    0x03, 0xca, 0xef, 0xcb, 0xfd, 0xab, 0x78, 0xf5, 0xf2, 0x0d, 0xa2, 0x0b,
    0x7e, 0x10, 0xde, 0x2a, 0x8b, 0x52, 0x92, 0x01, 0x45, 0x23, 0x79, 0x8a,
    0xee, 0xa6, 0x0b, 0x5d, 0xa8, 0x6d, 0xd4, 0x60, 0x37, 0x51, 0x6c, 0x8c,
    0x21, 0x6c, 0x87, 0xe4, 0x5c, 0xcf, 0xe5, 0xea, 0xba, 0x27, 0x4b, 0x52,
    0x45, 0x15, 0xd5, 0xad, 0xba, 0x14, 0x57, 0x24, 0xd5, 0x55, 0xb1, 0x2a,
    0xaa, 0xc7, 0x9e, 0xa4, 0x9e, 0x64, 0x4d, 0xa8, 0x22, 0x47, 0x9e, 0x3c,
    0xf5, 0xe4, 0x68, 0x42, 0x9e, 0x1c, 0x39, 0xaa, 0xcb, 0x93, 0x62, 0x47,
    0x17, 0x7f, 0x1c, 0xb5, 0x77, 0xda, 0x5a, 0xfb, 0xb4, 0xa6, 0x65, 0x67,
    0x39, 0x97, 0x03, 0xa8, 0x94, 0x2b, 0x6a, 0xed, 0x74, 0x14, 0xc7, 0x3d,
    0x59, 0x96, 0x24, 0x4d, 0x68, 0x22, 0x1d, 0x84, 0x2f, 0x5f, 0xf3, 0xd6,
    0x62, 0x32, 0x10, 0x49, 0xbe, 0xd5, 0xd2, 0xbc, 0xe6, 0xfa, 0x79, 0x43,
    0x81, 0xe6, 0xe3, 0xb7, 0x92, 0x65, 0x69, 0xe1, 0xe3, 0x9c, 0x96, 0x9d,
    0xe5, 0x9c, 0x24, 0xe5, 0x06, 0x3f, 0x9e, 0xf6, 0xb7, 0x8e, 0xfe, 0x5e,
    0x5c, 0x48, 0x92, 0x62, 0xc5, 0x8a, 0xe3, 0x64, 0x95, 0x45, 0x9c, 0x14,
    0xd4, 0x8b, 0xa5, 0x38, 0xbe, 0x4a, 0x6a, 0xd7, 0xb1, 0x8a, 0x53, 0x45,
    0xcd, 0xbd, 0x9b, 0xd3, 0xe2, 0xc2, 0x62, 0x9f, 0xef, 0x1f, 0xb2, 0x64,
    0x57, 0x8a, 0x8e, 0x6d, 0xeb, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image7_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x84, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0x93, 0xd1, 0x0e, 0x80,
    0x20, 0x08, 0x45, 0xb1, 0xef, 0xb6, 0x35, 0x86, 0xff, 0x7d, 0x7b, 0x70,
    0x2b, 0x46, 0x21, 0x5a, 0x4f, 0x35, 0xcf, 0xe6, 0x98, 0x22, 0x17, 0x44,
    0x25, 0x9a, 0x7c, 0x96, 0x34, 0xb6, 0x5d, 0x50, 0x6d, 0x26, 0xa2, 0x72,
    0xac, 0x82, 0x33, 0xa5, 0x2d, 0x79, 0x5a, 0x40, 0x5b, 0x10, 0x88, 0x6d,
    0x33, 0xd8, 0x26, 0x13, 0x35, 0x5a, 0x89, 0x05, 0xe0, 0x5b, 0x71, 0x9b,
    0x39, 0xac, 0xc4, 0x89, 0xaf, 0x2c, 0xa7, 0xa3, 0x28, 0x0b, 0x9c, 0x73,
    0xb7, 0x77, 0x86, 0xe2, 0x39, 0xba, 0x7b, 0xd6, 0x55, 0xb1, 0x42, 0x8b,
    0xca, 0x03, 0x71, 0x77, 0xff, 0xf0, 0x6d, 0x37, 0x2b, 0x76, 0x7a, 0x9c,
    0xe9, 0xda, 0xf3, 0x48, 0xb4, 0x90, 0x70, 0x5f, 0x09, 0x21, 0xc2, 0xfe,
    0xc9, 0x06, 0x7f, 0x9e, 0x45, 0xbf, 0x9e, 0xf5, 0xa5, 0xd6, 0xe4, 0xff,
    0xec, 0x4a, 0x45, 0x78, 0xab, 0xea, 0x3a, 0x4a, 0xe3, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image8_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x7f, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0x92, 0x41, 0x0e, 0x80,
    0x20, 0x0c, 0x04, 0x47, 0xe3, 0xb3, 0xe5, 0x60, 0xe0, 0x85, 0x7e, 0x08,
    0x0f, 0x46, 0xad, 0x5a, 0xaa, 0xd4, 0x9b, 0x61, 0x12, 0x42, 0x1a, 0xda,
    0xcd, 0xb6, 0x05, 0x1a, 0xff, 0x21, 0x4e, 0x31, 0x43, 0xce, 0x10, 0xc5,
    0xd9, 0x62, 0xbf, 0xac, 0x10, 0xb1, 0x6e, 0xab, 0xde, 0x74, 0x5a, 0xe2,
    0xda, 0x89, 0x66, 0xaa, 0x58, 0x54, 0xdb, 0x99, 0x16, 0xc3, 0x70, 0x24,
    0xa7, 0x77, 0x9a, 0x00, 0x84, 0x0e, 0x10, 0xa2, 0xa3, 0x55, 0xef, 0x59,
    0x90, 0xb6, 0x83, 0x62, 0x92, 0x47, 0x54, 0xfe, 0x9e, 0x4f, 0x8e, 0xad,
    0x5f, 0xb3, 0xd2, 0xef, 0xa9, 0x53, 0x12, 0x45, 0x4f, 0xa2, 0x72, 0xa6,
    0x89, 0x87, 0x19, 0x9f, 0x9d, 0xe4, 0xb9, 0x66, 0x2c, 0x77, 0x3a, 0x5d,
    0x7c, 0x23, 0x28, 0xef, 0x8d, 0x86, 0x97, 0x05, 0x46, 0xd8, 0x7c, 0x8e,
    0xcf, 0xe6, 0x26, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image9_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x81, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xcd, 0xd2, 0x41, 0x0e, 0x80,
    0x30, 0x08, 0x04, 0x40, 0xea, 0xd7, 0xf1, 0xdf, 0x78, 0x69, 0x9b, 0x86,
    0x60, 0x59, 0x10, 0xa3, 0x7b, 0x31, 0x9a, 0x30, 0xae, 0x58, 0xa2, 0x8f,
    0x22, 0xc1, 0xe7, 0x33, 0x47, 0x71, 0x91, 0x7f, 0xc2, 0xee, 0x1a, 0x50,
    0xd8, 0x82, 0xda, 0x53, 0xd8, 0x05, 0xb2, 0xf0, 0x88, 0xa8, 0xab, 0x1b,
    0xb4, 0xd1, 0x0a, 0x42, 0x33, 0xaf, 0x9d, 0x8a, 0x48, 0xe0, 0x35, 0x10,
    0xc1, 0x8d, 0xb9, 0xa3, 0x02, 0xe3, 0x00, 0x3c, 0xb1, 0x46, 0x74, 0xf6,
    0x7b, 0x0e, 0xb5, 0x37, 0xa2, 0x9b, 0xae, 0x60, 0x1a, 0x17, 0x03, 0xd1,
    0x58, 0x18, 0xbf, 0x03, 0xac, 0x1d, 0xc3, 0xf8, 0x6e, 0xd8, 0x42, 0xe0,
    0x1f, 0xea, 0x0d, 0xa7, 0xd7, 0xe1, 0x7d, 0xee, 0xee, 0x25, 0xdb, 0x20,
    0x8d, 0x38, 0x7b, 0xe4, 0x58, 0x8a, 0xce, 0x6b, 0x7d, 0x2e, 0x37, 0x9d,
    0x44, 0xac, 0x8f, 0x73, 0xf0, 0x4b, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image10_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xc8, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xd5, 0x94, 0x41, 0x0e, 0x83,
    0x20, 0x14, 0x44, 0x67, 0x4c, 0x2f, 0xd5, 0xc4, 0x2b, 0xf4, 0x46, 0xdd,
    0xe9, 0xa6, 0xe9, 0x59, 0x7a, 0xa5, 0x5e, 0x65, 0x5c, 0xfc, 0x80, 0xa8,
    0x1f, 0x44, 0x48, 0x17, 0x9d, 0xe4, 0x07, 0x03, 0xc3, 0x73, 0xfc, 0xa2,
    0xc0, 0xbf, 0x89, 0x00, 0x54, 0xe1, 0x69, 0x03, 0x4b, 0x3e, 0x9b, 0x64,
    0xea, 0xbb, 0xa4, 0x9b, 0x03, 0x01, 0xec, 0x6e, 0x71, 0x24, 0xa9, 0xab,
    0xf0, 0x08, 0xce, 0xa5, 0x6e, 0x85, 0x0f, 0xe1, 0x82, 0xe4, 0xa6, 0xd6,
    0x79, 0x80, 0x9c, 0x61, 0xaf, 0x62, 0x12, 0x20, 0x6d, 0xc7, 0xbc, 0x94,
    0x93, 0xd1, 0xa6, 0xc2, 0x7a, 0x19, 0x9e, 0x40, 0xb6, 0x15, 0x36, 0x7b,
    0xeb, 0x36, 0x37, 0xe9, 0x3b, 0xfa, 0xf0, 0x21, 0xa1, 0x1f, 0xca, 0x34,
    0xbb, 0xeb, 0x41, 0x9f, 0x07, 0x70, 0x1f, 0x9f, 0xf0, 0xe0, 0x5d, 0x89,
    0x25, 0xe9, 0xfd, 0x92, 0x9b, 0x3c, 0xdb, 0xc3, 0x74, 0x73, 0xb9, 0xc7,
    0xa1, 0x56, 0x78, 0xfc, 0x40, 0xf6, 0xe7, 0x38, 0x3c, 0x3e, 0x69, 0xf6,
    0xdc, 0x39, 0xdf, 0xcb, 0x6c, 0x64, 0x77, 0x8f, 0x8f, 0x32, 0x7f, 0x73,
    0x62, 0x4f, 0xc1, 0xdf, 0x95, 0xf8, 0xcc, 0x5f, 0xf1, 0x77, 0x53, 0x73,
    0x62, 0x96, 0xab, 0x3d, 0xf1, 0x79, 0x8e, 0x9e, 0x1e, 0xe7, 0xd5, 0x96,
    0xb8, 0x42, 0xfb, 0xbf, 0x59, 0xcd, 0xf8, 0x43, 0x2d, 0xe6, 0x69, 0xb9,
    0xec, 0x32, 0xb2, 0x55, 0x84, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image11_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x01,
    0x10, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x93, 0xeb, 0x6d, 0xc3,
    0x30, 0x0c, 0x84, 0x3f, 0x1a, 0x9d, 0x27, 0x0b, 0x04, 0xe8, 0x0e, 0xd9,
    0x47, 0x46, 0x20, 0x48, 0xfb, 0x64, 0x07, 0x03, 0x5e, 0x20, 0x0b, 0x5d,
    0x7f, 0xb0, 0xaa, 0x5f, 0x72, 0x6c, 0xd7, 0x09, 0x01, 0xe1, 0x40, 0x91,
    0x3a, 0x1d, 0xcf, 0x16, 0x7c, 0x28, 0x6c, 0xa3, 0xae, 0x7f, 0x9c, 0x59,
    0x34, 0xd5, 0x48, 0xd0, 0x68, 0xd7, 0xd6, 0x29, 0x17, 0x95, 0xb2, 0xb1,
    0x49, 0x7a, 0x94, 0xbc, 0x29, 0xa4, 0x7a, 0x8a, 0x14, 0x1d, 0xe7, 0x44,
    0x65, 0x4d, 0x2e, 0x5d, 0xf6, 0x4f, 0x0e, 0x36, 0x00, 0x8a, 0x22, 0x3f,
    0x0c, 0x48, 0xd8, 0xc5, 0x90, 0x44, 0xdf, 0xf5, 0x80, 0x63, 0x2d, 0xb7,
    0x8b, 0xf7, 0xe7, 0x87, 0xa1, 0x58, 0x1d, 0x18, 0xa5, 0x88, 0xf4, 0x94,
    0x52, 0x44, 0x80, 0xfa, 0xae, 0x97, 0x24, 0xa9, 0x73, 0xa8, 0xe5, 0xb5,
    0x73, 0x63, 0xd2, 0x2f, 0x07, 0xbf, 0x39, 0x20, 0x5a, 0x8c, 0xeb, 0xf7,
    0x75, 0xd5, 0xc8, 0x71, 0x04, 0x86, 0x49, 0xa1, 0x9d, 0xd4, 0x1a, 0x87,
    0x96, 0x70, 0x13, 0x19, 0x9b, 0x78, 0xb7, 0x85, 0x19, 0x23, 0xdc, 0xb4,
    0x20, 0x05, 0xff, 0x92, 0x52, 0xf4, 0xa6, 0x72, 0x73, 0xe0, 0x78, 0x6e,
    0x77, 0x2b, 0x7c, 0x75, 0x8f, 0xe7, 0xe8, 0x3f, 0x5d, 0xda, 0x81, 0x53,
    0x8f, 0xcd, 0x89, 0x5f, 0x29, 0xc9, 0x48, 0x61, 0xd5, 0x67, 0x33, 0xaf,
    0x9b, 0x65, 0xa0, 0x3d, 0xa6, 0x58, 0x52, 0x55, 0x69, 0xd9, 0x2f, 0xf1,
    0xab, 0x7c, 0x9f, 0xc7, 0xed, 0x9d, 0x5d, 0x8a, 0xc7, 0x79, 0x51, 0xfe,
    0x36, 0xc5, 0x63, 0xe5, 0x6f, 0xf1, 0x78, 0x88, 0x00, 0x0c, 0xf9, 0x29,
    0xc5, 0xb5, 0xf8, 0x53, 0x7c, 0xc6, 0xe3, 0xfa, 0x14, 0x27, 0x15, 0xd7,
    0x70, 0xfe, 0x77, 0x68, 0x7d, 0xa5, 0xf5, 0x99, 0x5f, 0x58, 0xb1, 0x63,
    0xb0, 0xbd, 0x2f, 0x6f, 0xf1, 0x12, 0x3f, 0x13, 0x3f, 0xbf, 0xfa, 0x26,
    0xd4, 0xfd, 0x33, 0xc4, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image12_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x04,
    0x15, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x94, 0x5f, 0x68, 0x5b,
    0x55, 0x00, 0xc6, 0xbf, 0x24, 0xb7, 0x6d, 0x82, 0x9d, 0x4b, 0x5c, 0x2b,
    0x8d, 0x4e, 0xe5, 0x0e, 0x04, 0xdb, 0x87, 0xb1, 0x16, 0x85, 0xb6, 0xd0,
    0xa9, 0x0f, 0xca, 0x90, 0x3d, 0xe8, 0x60, 0xc8, 0x3a, 0x10, 0x9a, 0xea,
    0x43, 0x6e, 0x28, 0x22, 0x09, 0x93, 0x92, 0xfa, 0x50, 0xd2, 0x0c, 0xa4,
    0xeb, 0x43, 0x47, 0x2b, 0x4c, 0xd7, 0x49, 0x74, 0x9d, 0x98, 0xb5, 0x15,
    0x14, 0x7d, 0x70, 0x34, 0x6a, 0x43, 0x53, 0xe8, 0x48, 0x36, 0x95, 0xa4,
    0xda, 0x8e, 0x04, 0xdb, 0xf5, 0xa6, 0x6b, 0xbb, 0xdc, 0x90, 0xae, 0xcd,
    0x6d, 0x9b, 0xdc, 0xcf, 0x87, 0x26, 0x3a, 0x4a, 0x4d, 0xf5, 0xc1, 0x0f,
    0x3e, 0xce, 0xe1, 0x9c, 0xc3, 0xef, 0x7c, 0xe7, 0x2f, 0xb0, 0x8f, 0xc6,
    0x4f, 0x8c, 0xeb, 0xf6, 0x1b, 0xb3, 0x97, 0x84, 0xbd, 0x1a, 0x53, 0x9d,
    0xa9, 0x2f, 0xbb, 0xd4, 0xae, 0x93, 0x26, 0x98, 0x4c, 0xa3, 0x18, 0xd5,
    0xc9, 0xb5, 0xb2, 0xd6, 0x93, 0xeb, 0xc9, 0x5a, 0xcc, 0x96, 0xcf, 0xbd,
    0x1e, 0xaf, 0xfd, 0x3f, 0xcf, 0xe2, 0xee, 0x74, 0x1f, 0x97, 0xfd, 0xb2,
    0x1a, 0x8e, 0x84, 0x35, 0x92, 0x64, 0x8c, 0x1a, 0xc9, 0x3c, 0x67, 0xb9,
    0xa3, 0x69, 0x6a, 0xb2, 0x5f, 0xce, 0xba, 0x3f, 0x70, 0x37, 0xef, 0xc7,
    0xd2, 0x17, 0x2b, 0x9e, 0x6e, 0xf7, 0x0b, 0x0e, 0xd5, 0xf1, 0xa3, 0x7a,
    0x4c, 0xad, 0x68, 0xa8, 0x6a, 0xd8, 0x76, 0x7c, 0x14, 0xca, 0x28, 0x37,
    0x91, 0x73, 0x5d, 0x89, 0xe8, 0xba, 0xa6, 0xb0, 0xed, 0xb8, 0x18, 0xca,
    0xe0, 0x30, 0xb6, 0xd5, 0xe7, 0x55, 0xa3, 0xfa, 0x40, 0x09, 0x7a, 0xbc,
    0x9e, 0xfa, 0x7f, 0x95, 0x56, 0xf6, 0xcb, 0xeb, 0x9c, 0x25, 0x39, 0xcf,
    0x2d, 0xa7, 0x8f, 0x1a, 0xc9, 0xfb, 0x4c, 0x71, 0x85, 0x64, 0x92, 0x32,
    0x17, 0x48, 0xc6, 0x9d, 0xbe, 0x68, 0x9e, 0xf3, 0xdc, 0x64, 0x9c, 0x94,
    0xfd, 0xf1, 0xb5, 0x7d, 0x13, 0x6f, 0x74, 0xa7, 0xce, 0x05, 0x10, 0x28,
    0x83, 0x19, 0x5b, 0xae, 0x1b, 0x11, 0xe1, 0xc2, 0x5b, 0xb8, 0x97, 0x54,
    0xb2, 0x1a, 0x2c, 0x28, 0x4b, 0x2a, 0x59, 0x3d, 0xac, 0x60, 0x6c, 0x21,
    0xab, 0x5d, 0x78, 0xa3, 0x6e, 0xd2, 0x75, 0x23, 0x52, 0x86, 0x1a, 0x6c,
    0x05, 0xb6, 0x43, 0x82, 0xa7, 0xdb, 0xf3, 0x6e, 0xc9, 0xb4, 0x52, 0x87,
    0xb4, 0x42, 0x92, 0x52, 0x3f, 0xd7, 0x49, 0xce, 0x51, 0xe6, 0x3c, 0xc9,
    0x45, 0xa6, 0x78, 0x97, 0x64, 0x9c, 0x32, 0x67, 0x48, 0xfe, 0xdc, 0x3b,
    0xc6, 0x6b, 0xa9, 0x59, 0x8e, 0x7b, 0x86, 0xc3, 0x5b, 0x24, 0x29, 0x75,
    0x48, 0xc9, 0x92, 0x89, 0x4d, 0x02, 0xcc, 0x89, 0x44, 0x02, 0x5d, 0x95,
    0xa8, 0x08, 0xcd, 0x28, 0xdb, 0xb0, 0x42, 0x4d, 0x24, 0xb3, 0x19, 0x58,
    0xa0, 0x24, 0x56, 0xb2, 0x69, 0x58, 0xa1, 0x04, 0x6e, 0x29, 0xb3, 0x67,
    0x15, 0x2c, 0x7a, 0x83, 0x91, 0x78, 0x5a, 0x6d, 0xd0, 0x27, 0x17, 0x92,
    0xe8, 0x12, 0x50, 0x55, 0x12, 0x0c, 0xc0, 0x20, 0x8a, 0x22, 0xfa, 0x10,
    0x33, 0x34, 0xd7, 0x5a, 0xd6, 0x91, 0xc0, 0x9a, 0x68, 0x35, 0x29, 0x48,
    0xe2, 0xbe, 0x58, 0x6d, 0x5a, 0xc6, 0x1c, 0xe6, 0xea, 0xcd, 0x96, 0x60,
    0x9f, 0x10, 0x53, 0xdc, 0x2d, 0x0d, 0x69, 0x00, 0x06, 0xeb, 0x53, 0x56,
    0xf4, 0x01, 0x86, 0x92, 0x60, 0x27, 0x90, 0x4b, 0x24, 0x12, 0x30, 0x0a,
    0x75, 0x1c, 0xfc, 0x26, 0xb1, 0x04, 0x11, 0x4b, 0xa1, 0x39, 0x65, 0x15,
    0x56, 0xfc, 0xfe, 0xed, 0xcd, 0xe4, 0x84, 0x32, 0x85, 0xaf, 0xbc, 0x3f,
    0x44, 0x56, 0x8d, 0xa8, 0xcb, 0x78, 0x83, 0xb1, 0xac, 0x13, 0xc8, 0x27,
    0xe6, 0x12, 0x00, 0xb0, 0x5d, 0x12, 0x3c, 0x54, 0x65, 0x0d, 0x8b, 0xa2,
    0x98, 0x33, 0x0b, 0xd0, 0x5e, 0x3b, 0x2c, 0x3e, 0xe6, 0xba, 0x12, 0x8b,
    0xd5, 0xc2, 0x12, 0x74, 0x7d, 0x86, 0xc9, 0x66, 0xb3, 0x35, 0xe2, 0xcd,
    0xc5, 0x96, 0xdd, 0x2d, 0x0d, 0xeb, 0x2a, 0xb0, 0x69, 0xab, 0xad, 0x6b,
    0x19, 0x3e, 0x10, 0xd1, 0x89, 0xcf, 0x8a, 0x9b, 0xe6, 0x2a, 0xeb, 0x54,
    0x49, 0xb0, 0x51, 0x30, 0x7e, 0xd2, 0x73, 0xbe, 0x27, 0xe9, 0x6a, 0x85,
    0x61, 0xf0, 0x56, 0xa4, 0x19, 0xa8, 0x3b, 0xe0, 0x0d, 0xc6, 0xf4, 0x4e,
    0x40, 0xf0, 0x06, 0x23, 0x15, 0x10, 0xea, 0x1e, 0xf5, 0x06, 0x63, 0xe5,
    0x4e, 0x15, 0x8f, 0x5f, 0x99, 0x89, 0xbc, 0xe4, 0x3a, 0xdd, 0xa0, 0x77,
    0x48, 0xed, 0x19, 0xc7, 0x83, 0xf6, 0xc0, 0x3f, 0x81, 0xff, 0x92, 0x3c,
    0x1c, 0x4f, 0x8e, 0xf8, 0x47, 0x56, 0x49, 0xd2, 0xe9, 0x23, 0xa3, 0x13,
    0xbc, 0xed, 0x1c, 0x0a, 0x9f, 0x4b, 0xcd, 0xd2, 0x26, 0x5d, 0xa2, 0x3d,
    0xfc, 0x3d, 0xc3, 0x4e, 0x5f, 0x74, 0xe7, 0x05, 0x46, 0x98, 0xe7, 0x32,
    0x17, 0x25, 0xbb, 0x94, 0x09, 0xf7, 0x87, 0xad, 0x25, 0xc1, 0xbd, 0x1f,
    0x7a, 0x8e, 0x3a, 0xdf, 0x93, 0xb2, 0x03, 0xfd, 0x03, 0x0b, 0x24, 0x39,
    0xf0, 0x75, 0x94, 0x6e, 0x1f, 0x35, 0xe7, 0x50, 0x98, 0x29, 0x1f, 0xb5,
    0x81, 0xef, 0x76, 0xa0, 0x92, 0x5d, 0xca, 0x93, 0xe4, 0x88, 0x7f, 0x84,
    0xbc, 0xc4, 0x35, 0x9b, 0xdd, 0x76, 0xaf, 0xf5, 0x4c, 0xeb, 0x7e, 0xf0,
    0xde, 0xa3, 0xf2, 0x70, 0xfc, 0xae, 0xa7, 0xdb, 0x7d, 0x87, 0xd3, 0x9c,
    0xe7, 0x04, 0x33, 0x24, 0x39, 0x19, 0x98, 0x4c, 0x33, 0xc4, 0xdf, 0x6c,
    0xef, 0xd8, 0xfe, 0x88, 0x5e, 0x8a, 0xb6, 0x4b, 0x1d, 0x12, 0x49, 0xf2,
    0xf2, 0xe0, 0x65, 0x32, 0x46, 0x55, 0xb2, 0xdb, 0x52, 0xbb, 0x93, 0xef,
    0xf9, 0x25, 0xf6, 0xf6, 0xf5, 0xb6, 0x21, 0xa7, 0x9e, 0x3e, 0xbb, 0x94,
    0x7c, 0xb1, 0x27, 0x07, 0x93, 0x49, 0x40, 0xb6, 0xa6, 0xc6, 0xfa, 0x93,
    0x4b, 0xe8, 0xba, 0xae, 0x73, 0xea, 0x3e, 0x95, 0x3a, 0xa4, 0xf3, 0x00,
    0x3a, 0x07, 0x2f, 0x0e, 0x62, 0xe8, 0xe3, 0x21, 0xb4, 0xa3, 0x3d, 0xef,
    0xb8, 0xdd, 0xbe, 0x91, 0x4e, 0xa7, 0x9f, 0xbb, 0xf6, 0xc5, 0x98, 0xbc,
    0xdf, 0xb6, 0xeb, 0xb1, 0xf3, 0xad, 0x96, 0x01, 0x28, 0x2f, 0xb8, 0xa2,
    0x58, 0x8f, 0x0f, 0xc5, 0xdf, 0x96, 0x3a, 0x24, 0x8d, 0x24, 0xaf, 0xfa,
    0xae, 0x92, 0xf3, 0xd4, 0x24, 0xbb, 0xb4, 0x11, 0xee, 0x0b, 0x3f, 0xbd,
    0x17, 0xa8, 0x1c, 0x80, 0x09, 0x40, 0x25, 0x80, 0x83, 0xf5, 0xc7, 0xea,
    0xab, 0xc7, 0x03, 0xe3, 0xc7, 0x49, 0xbe, 0x19, 0xfd, 0x25, 0x7a, 0x96,
    0x5b, 0x3c, 0x61, 0x6b, 0xb3, 0x1d, 0x01, 0x50, 0x0d, 0xe0, 0xd0, 0xa9,
    0xd7, 0x4f, 0x9d, 0x2c, 0xc2, 0x27, 0x43, 0x93, 0x24, 0xc9, 0xd6, 0x33,
    0xad, 0x8b, 0x0f, 0x43, 0x05, 0x00, 0x46, 0x00, 0x8f, 0x00, 0x38, 0x08,
    0xe0, 0x90, 0xb9, 0xd2, 0x5c, 0x33, 0xe2, 0x1f, 0x79, 0x99, 0xa4, 0x8b,
    0x29, 0x8e, 0x92, 0xbc, 0xca, 0x69, 0xbe, 0xcf, 0x10, 0x5f, 0x05, 0x70,
    0x04, 0xc0, 0x33, 0x00, 0x9e, 0x6c, 0x6a, 0x6c, 0x6a, 0xb4, 0xb5, 0xb5,
    0xee, 0xdc, 0x96, 0x79, 0x32, 0x3e, 0x1c, 0xbf, 0x03, 0x40, 0x5f, 0xdc,
    0x63, 0x5d, 0x61, 0xc9, 0x42, 0xc1, 0x86, 0x87, 0xca, 0xa2, 0xf5, 0x85,
    0x71, 0x04, 0xa0, 0x01, 0xc8, 0x17, 0xdd, 0xd4, 0xd8, 0xf4, 0x44, 0x6d,
    0xad, 0xe8, 0x33, 0x56, 0x9a, 0x6b, 0x96, 0x96, 0x96, 0x5e, 0x19, 0xbb,
    0x3e, 0xf6, 0xeb, 0xee, 0xc3, 0xd3, 0x15, 0xbc, 0x1b, 0x68, 0xc0, 0xdf,
    0x07, 0x5d, 0x04, 0x17, 0x9d, 0x2b, 0x4c, 0xa0, 0x15, 0xfa, 0xfe, 0x5f,
    0xfd, 0x09, 0xd0, 0x5c, 0x66, 0x59, 0x2d, 0xee, 0x13, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a MainForm as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 */
MainForm::MainForm( QWidget* parent, const char* name, WFlags fl )
    : QMainWindow( parent, name, fl )
{
    (void)statusBar();
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    img.loadFromData( image5_data, sizeof( image5_data ), "PNG" );
    image5 = img;
    img.loadFromData( image6_data, sizeof( image6_data ), "PNG" );
    image6 = img;
    img.loadFromData( image7_data, sizeof( image7_data ), "PNG" );
    image7 = img;
    img.loadFromData( image8_data, sizeof( image8_data ), "PNG" );
    image8 = img;
    img.loadFromData( image9_data, sizeof( image9_data ), "PNG" );
    image9 = img;
    img.loadFromData( image10_data, sizeof( image10_data ), "PNG" );
    image10 = img;
    img.loadFromData( image11_data, sizeof( image11_data ), "PNG" );
    image11 = img;
    img.loadFromData( image12_data, sizeof( image12_data ), "PNG" );
    image12 = img;
    if ( !name )
	setName( "MainForm" );
    setCentralWidget( new QWidget( this, "qt_central_widget" ) );
    MainFormLayout = new QVBoxLayout( centralWidget(), 11, 6, "MainFormLayout"); 

    splitter1 = new QSplitter( centralWidget(), "splitter1" );
    splitter1->setMinimumSize( QSize( 613, 100 ) );
    splitter1->setOrientation( QSplitter::Horizontal );

    QWidget* privateLayoutWidget = new QWidget( splitter1, "layout26" );
    layout26 = new QVBoxLayout( privateLayoutWidget, 11, 6, "layout26"); 

    layout25 = new QHBoxLayout( 0, 0, 6, "layout25"); 

    btnAddNewTab = new QToolButton( privateLayoutWidget, "btnAddNewTab" );
    btnAddNewTab->setIconSet( QIconSet( image0 ) );
    layout25->addWidget( btnAddNewTab );

    btnRemoveTab = new QToolButton( privateLayoutWidget, "btnRemoveTab" );
    btnRemoveTab->setIconSet( QIconSet( image1 ) );
    layout25->addWidget( btnRemoveTab );

    btnRenameTab = new QToolButton( privateLayoutWidget, "btnRenameTab" );
    btnRenameTab->setIconSet( QIconSet( image2 ) );
    layout25->addWidget( btnRenameTab );
    spacer5 = new QSpacerItem( 90, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout25->addItem( spacer5 );
    layout26->addLayout( layout25 );

    lvGraphs = new QListView( privateLayoutWidget, "lvGraphs" );
    lvGraphs->addColumn( tr( "Canvas" ) );
    lvGraphs->header()->setClickEnabled( FALSE, lvGraphs->header()->count() - 1 );
    lvGraphs->header()->setResizeEnabled( FALSE, lvGraphs->header()->count() - 1 );
    lvGraphs->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)7, 0, 0, lvGraphs->sizePolicy().hasHeightForWidth() ) );
    lvGraphs->setMinimumSize( QSize( 100, 0 ) );
    lvGraphs->setMaximumSize( QSize( 300, 32767 ) );
    lvGraphs->setFrameShape( QListView::NoFrame );
    lvGraphs->setHScrollBarMode( QListView::AlwaysOff );
    lvGraphs->setAllColumnsShowFocus( FALSE );
    lvGraphs->setResizeMode( QListView::AllColumns );
    layout26->addWidget( lvGraphs );

    wgStack = new QWidgetStack( splitter1, "wgStack" );
    wgStack->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, wgStack->sizePolicy().hasHeightForWidth() ) );
    wgStack->setMinimumSize( QSize( 500, 100 ) );

    wgEmtpyPage = new QWidget( wgStack, "wgEmtpyPage" );
    wgEmtpyPageLayout = new QHBoxLayout( wgEmtpyPage, 11, 6, "wgEmtpyPageLayout"); 

    textLabel1_4 = new QLabel( wgEmtpyPage, "textLabel1_4" );
    wgEmtpyPageLayout->addWidget( textLabel1_4 );
    wgStack->addWidget( wgEmtpyPage, 0 );

    qt_dead_widget_WStackPage = new QWidget( wgStack, "qt_dead_widget_WStackPage" );

    tabsAction = new QTabWidget( qt_dead_widget_WStackPage, "tabsAction" );
    tabsAction->setEnabled( TRUE );
    tabsAction->setGeometry( QRect( 176, 88, 250, 210 ) );
    tabsAction->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, tabsAction->sizePolicy().hasHeightForWidth() ) );
    tabsAction->setMinimumSize( QSize( 0, 210 ) );

    tabRootTree = new QWidget( tabsAction, "tabRootTree" );

    QWidget* privateLayoutWidget_2 = new QWidget( tabRootTree, "layout15" );
    privateLayoutWidget_2->setGeometry( QRect( 12, 12, 16, 98 ) );
    layout15 = new QHBoxLayout( privateLayoutWidget_2, 11, 6, "layout15"); 

    layout13 = new QHBoxLayout( 0, 0, 6, "layout13"); 
    layout15->addLayout( layout13 );

    QWidget* privateLayoutWidget_3 = new QWidget( tabRootTree, "layout11" );
    privateLayoutWidget_3->setGeometry( QRect( 100, 145, 284, 23 ) );
    layout11 = new QHBoxLayout( privateLayoutWidget_3, 11, 6, "layout11"); 
    spacer4 = new QSpacerItem( 40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout11->addItem( spacer4 );

    textLabel2_2 = new QLabel( privateLayoutWidget_3, "textLabel2_2" );
    layout11->addWidget( textLabel2_2 );

    txtNumberEvents = new QLineEdit( privateLayoutWidget_3, "txtNumberEvents" );
    txtNumberEvents->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)4, (QSizePolicy::SizeType)0, 0, 0, txtNumberEvents->sizePolicy().hasHeightForWidth() ) );
    txtNumberEvents->setMinimumSize( QSize( 40, 0 ) );
    txtNumberEvents->setMaximumSize( QSize( 40, 32767 ) );
    txtNumberEvents->setReadOnly( TRUE );
    layout11->addWidget( txtNumberEvents );
    tabsAction->insertTab( tabRootTree, QString::fromLatin1("") );
    wgStack->addWidget( qt_dead_widget_WStackPage, 1 );
    MainFormLayout->addWidget( splitter1 );

    layout22 = new QHBoxLayout( 0, 0, 6, "layout22"); 

    groupBox3 = new QGroupBox( centralWidget(), "groupBox3" );
    groupBox3->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)5, 0, 0, groupBox3->sizePolicy().hasHeightForWidth() ) );
    groupBox3->setMaximumSize( QSize( 300, 32767 ) );
    groupBox3->setColumnLayout(0, Qt::Vertical );
    groupBox3->layout()->setSpacing( 6 );
    groupBox3->layout()->setMargin( 11 );
    groupBox3Layout = new QVBoxLayout( groupBox3->layout() );
    groupBox3Layout->setAlignment( Qt::AlignTop );

    txtEventCut = new QTextEdit( groupBox3, "txtEventCut" );
    txtEventCut->setEnabled( TRUE );
    txtEventCut->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)4, 0, 0, txtEventCut->sizePolicy().hasHeightForWidth() ) );
    txtEventCut->setWordWrap( QTextEdit::WidgetWidth );
    groupBox3Layout->addWidget( txtEventCut );

    layout29 = new QHBoxLayout( 0, 0, 6, "layout29"); 

    textLabel1_3_2 = new QLabel( groupBox3, "textLabel1_3_2" );
    layout29->addWidget( textLabel1_3_2 );

    cmbEventCuts = new QComboBox( FALSE, groupBox3, "cmbEventCuts" );
    cmbEventCuts->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)0, 0, 0, cmbEventCuts->sizePolicy().hasHeightForWidth() ) );
    cmbEventCuts->setMaximumSize( QSize( 400, 32767 ) );
    layout29->addWidget( cmbEventCuts );
    groupBox3Layout->addLayout( layout29 );

    layout21 = new QHBoxLayout( 0, 0, 6, "layout21"); 

    textLabel1_3_2_2 = new QLabel( groupBox3, "textLabel1_3_2_2" );
    layout21->addWidget( textLabel1_3_2_2 );

    cmbBranchNames = new QComboBox( FALSE, groupBox3, "cmbBranchNames" );
    cmbBranchNames->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)0, 0, 0, cmbBranchNames->sizePolicy().hasHeightForWidth() ) );
    cmbBranchNames->setMaximumSize( QSize( 400, 32767 ) );
    layout21->addWidget( cmbBranchNames );
    groupBox3Layout->addLayout( layout21 );

    layout40 = new QHBoxLayout( 0, 0, 6, "layout40"); 

    btnApplyCut = new QPushButton( groupBox3, "btnApplyCut" );
    btnApplyCut->setEnabled( TRUE );
    layout40->addWidget( btnApplyCut );

    btnSaveCut = new QPushButton( groupBox3, "btnSaveCut" );
    layout40->addWidget( btnSaveCut );

    btnViewData = new QPushButton( groupBox3, "btnViewData" );
    layout40->addWidget( btnViewData );
    groupBox3Layout->addLayout( layout40 );
    layout22->addWidget( groupBox3 );

    layout25_2 = new QVBoxLayout( 0, 0, 6, "layout25_2"); 

    layout24 = new QHBoxLayout( 0, 0, 6, "layout24"); 

    textLabel1 = new QLabel( centralWidget(), "textLabel1" );
    layout24->addWidget( textLabel1 );

    cmbGraphType = new QComboBox( FALSE, centralWidget(), "cmbGraphType" );
    layout24->addWidget( cmbGraphType );
    spacer7 = new QSpacerItem( 40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout24->addItem( spacer7 );
    layout25_2->addLayout( layout24 );

    wgsAction = new QWidgetStack( centralWidget(), "wgsAction" );
    wgsAction->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)0, 0, 0, wgsAction->sizePolicy().hasHeightForWidth() ) );

    tabGraph2D = new QWidget( wgsAction, "tabGraph2D" );
    tabGraph2DLayout = new QHBoxLayout( tabGraph2D, 11, 6, "tabGraph2DLayout"); 

    layout12 = new QVBoxLayout( 0, 0, 6, "layout12"); 

    layout5 = new QHBoxLayout( 0, 0, 6, "layout5"); 

    textLabel3 = new QLabel( tabGraph2D, "textLabel3" );
    layout5->addWidget( textLabel3 );

    txt2DXAxis = new QLineEdit( tabGraph2D, "txt2DXAxis" );
    layout5->addWidget( txt2DXAxis );
    layout12->addLayout( layout5 );

    layout6 = new QHBoxLayout( 0, 0, 6, "layout6"); 

    textLabel4 = new QLabel( tabGraph2D, "textLabel4" );
    layout6->addWidget( textLabel4 );

    txt2DYAxis = new QLineEdit( tabGraph2D, "txt2DYAxis" );
    layout6->addWidget( txt2DYAxis );
    layout12->addLayout( layout6 );
    spacer2 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout12->addItem( spacer2 );

    ckb2DErrors = new QCheckBox( tabGraph2D, "ckb2DErrors" );
    layout12->addWidget( ckb2DErrors );

    gb2DErrors = new QGroupBox( tabGraph2D, "gb2DErrors" );
    gb2DErrors->setEnabled( FALSE );
    gb2DErrors->setColumnLayout(0, Qt::Vertical );
    gb2DErrors->layout()->setSpacing( 6 );
    gb2DErrors->layout()->setMargin( 11 );
    gb2DErrorsLayout = new QVBoxLayout( gb2DErrors->layout() );
    gb2DErrorsLayout->setAlignment( Qt::AlignTop );

    layout8 = new QHBoxLayout( 0, 0, 6, "layout8"); 

    textLabel3_2 = new QLabel( gb2DErrors, "textLabel3_2" );
    layout8->addWidget( textLabel3_2 );

    txt2DXAxisError = new QLineEdit( gb2DErrors, "txt2DXAxisError" );
    layout8->addWidget( txt2DXAxisError );
    gb2DErrorsLayout->addLayout( layout8 );

    layout9 = new QHBoxLayout( 0, 0, 6, "layout9"); 

    textLabel4_2 = new QLabel( gb2DErrors, "textLabel4_2" );
    layout9->addWidget( textLabel4_2 );

    txt2DYAxisError = new QLineEdit( gb2DErrors, "txt2DYAxisError" );
    layout9->addWidget( txt2DYAxisError );
    gb2DErrorsLayout->addLayout( layout9 );
    layout12->addWidget( gb2DErrors );
    tabGraph2DLayout->addLayout( layout12 );
    wgsAction->addWidget( tabGraph2D, 0 );

    tabShowerAngles = new QWidget( wgsAction, "tabShowerAngles" );
    tabShowerAnglesLayout = new QVBoxLayout( tabShowerAngles, 11, 6, "tabShowerAnglesLayout"); 

    layout23 = new QGridLayout( 0, 1, 1, 0, 6, "layout23"); 

    txtPolarRAxis = new QLineEdit( tabShowerAngles, "txtPolarRAxis" );

    layout23->addWidget( txtPolarRAxis, 0, 1 );

    textLabel4_3 = new QLabel( tabShowerAngles, "textLabel4_3" );

    layout23->addWidget( textLabel4_3, 1, 0 );

    textLabel3_3 = new QLabel( tabShowerAngles, "textLabel3_3" );

    layout23->addWidget( textLabel3_3, 0, 0 );

    textLabel1_5 = new QLabel( tabShowerAngles, "textLabel1_5" );

    layout23->addWidget( textLabel1_5, 2, 0 );

    txtPolarThetaAxis = new QLineEdit( tabShowerAngles, "txtPolarThetaAxis" );

    layout23->addWidget( txtPolarThetaAxis, 1, 1 );

    txtColorCode = new QLineEdit( tabShowerAngles, "txtColorCode" );

    layout23->addWidget( txtColorCode, 2, 1 );
    tabShowerAnglesLayout->addLayout( layout23 );

    ckbPolarErrors = new QCheckBox( tabShowerAngles, "ckbPolarErrors" );
    tabShowerAnglesLayout->addWidget( ckbPolarErrors );

    gbPolarErrors = new QGroupBox( tabShowerAngles, "gbPolarErrors" );
    gbPolarErrors->setEnabled( FALSE );
    gbPolarErrors->setColumnLayout(0, Qt::Vertical );
    gbPolarErrors->layout()->setSpacing( 6 );
    gbPolarErrors->layout()->setMargin( 11 );
    gbPolarErrorsLayout = new QVBoxLayout( gbPolarErrors->layout() );
    gbPolarErrorsLayout->setAlignment( Qt::AlignTop );

    layout8_2 = new QHBoxLayout( 0, 0, 6, "layout8_2"); 

    textLabel3_2_2 = new QLabel( gbPolarErrors, "textLabel3_2_2" );
    layout8_2->addWidget( textLabel3_2_2 );

    txtPolarRAxisError = new QLineEdit( gbPolarErrors, "txtPolarRAxisError" );
    layout8_2->addWidget( txtPolarRAxisError );
    gbPolarErrorsLayout->addLayout( layout8_2 );

    layout9_2 = new QHBoxLayout( 0, 0, 6, "layout9_2"); 

    textLabel4_2_2 = new QLabel( gbPolarErrors, "textLabel4_2_2" );
    layout9_2->addWidget( textLabel4_2_2 );

    txtPolarThetaAxisError = new QLineEdit( gbPolarErrors, "txtPolarThetaAxisError" );
    layout9_2->addWidget( txtPolarThetaAxisError );
    gbPolarErrorsLayout->addLayout( layout9_2 );
    tabShowerAnglesLayout->addWidget( gbPolarErrors );
    wgsAction->addWidget( tabShowerAngles, 1 );

    tabPosition = new QWidget( wgsAction, "tabPosition" );

    comboBox1 = new QComboBox( FALSE, tabPosition, "comboBox1" );
    comboBox1->setGeometry( QRect( 22, 16, 270, 21 ) );
    wgsAction->addWidget( tabPosition, 2 );
    layout25_2->addWidget( wgsAction );
    layout22->addLayout( layout25_2 );
    MainFormLayout->addLayout( layout22 );

    layout24_2 = new QHBoxLayout( 0, 0, 6, "layout24_2"); 

    ckbNewTab = new QCheckBox( centralWidget(), "ckbNewTab" );
    ckbNewTab->setEnabled( TRUE );
    layout24_2->addWidget( ckbNewTab );

    ckbMultiGraph = new QCheckBox( centralWidget(), "ckbMultiGraph" );
    ckbMultiGraph->setEnabled( TRUE );
    layout24_2->addWidget( ckbMultiGraph );
    spacer1 = new QSpacerItem( 120, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout24_2->addItem( spacer1 );

    btnClear = new QPushButton( centralWidget(), "btnClear" );
    btnClear->setMinimumSize( QSize( 100, 0 ) );
    layout24_2->addWidget( btnClear );

    btnDraw = new QPushButton( centralWidget(), "btnDraw" );
    btnDraw->setMinimumSize( QSize( 100, 0 ) );
    layout24_2->addWidget( btnDraw );
    MainFormLayout->addLayout( layout24_2 );

    // actions
    fileNewAction = new QAction( this, "fileNewAction" );
    fileNewAction->setIconSet( QIconSet( image3 ) );
    fileOpenAction = new QAction( this, "fileOpenAction" );
    fileOpenAction->setIconSet( QIconSet( image4 ) );
    fileSaveAction = new QAction( this, "fileSaveAction" );
    fileSaveAction->setIconSet( QIconSet( image5 ) );
    fileSaveAsAction = new QAction( this, "fileSaveAsAction" );
    filePrintAction = new QAction( this, "filePrintAction" );
    filePrintAction->setIconSet( QIconSet( image6 ) );
    fileExitAction = new QAction( this, "fileExitAction" );
    editUndoAction = new QAction( this, "editUndoAction" );
    editUndoAction->setIconSet( QIconSet( image7 ) );
    editRedoAction = new QAction( this, "editRedoAction" );
    editRedoAction->setIconSet( QIconSet( image8 ) );
    editCutAction = new QAction( this, "editCutAction" );
    editCutAction->setIconSet( QIconSet( image9 ) );
    editCopyAction = new QAction( this, "editCopyAction" );
    editCopyAction->setIconSet( QIconSet( image10 ) );
    editPasteAction = new QAction( this, "editPasteAction" );
    editPasteAction->setIconSet( QIconSet( image11 ) );
    editFindAction = new QAction( this, "editFindAction" );
    editFindAction->setIconSet( QIconSet( image12 ) );
    helpContentsAction = new QAction( this, "helpContentsAction" );
    helpIndexAction = new QAction( this, "helpIndexAction" );
    helpAboutAction = new QAction( this, "helpAboutAction" );
    fileSave_AllAction = new QAction( this, "fileSave_AllAction" );
    fileSave_AllSingle_PostscriptAction = new QAction( this, "fileSave_AllSingle_PostscriptAction" );
    fileSave_AllSeparate_PostscritpsAction = new QAction( this, "fileSave_AllSeparate_PostscritpsAction" );
    editDivide_CanvasAction = new QAction( this, "editDivide_CanvasAction" );
    editDivide_CanvasAction->setToggleAction( FALSE );
    editDivide_Canvas2_x_2Action = new QAction( this, "editDivide_Canvas2_x_2Action" );
    editDivide_Canvas3_x_2Action = new QAction( this, "editDivide_Canvas3_x_2Action" );
    editDivide_Canvas4_x_2Action = new QAction( this, "editDivide_Canvas4_x_2Action" );


    // toolbars


    // menubar
    MenuBar = new QMenuBar( this, "MenuBar" );


    fileMenu = new QPopupMenu( this );
    fileNewAction->addTo( fileMenu );
    fileOpenAction->addTo( fileMenu );
    fileSaveAction->addTo( fileMenu );
    popupMenu_4 = new QPopupMenu( this );
    fileMenu->insertItem( fileSave_AllAction->iconSet(), tr( "Save A&ll As..." ), popupMenu_4 );
    fileSave_AllSingle_PostscriptAction->addTo( popupMenu_4 );
    fileSave_AllSeparate_PostscritpsAction->addTo( popupMenu_4 );
    fileMenu->insertSeparator();
    filePrintAction->addTo( fileMenu );
    fileMenu->insertSeparator();
    fileExitAction->addTo( fileMenu );
    MenuBar->insertItem( QString(""), fileMenu, 1 );

    Edit = new QPopupMenu( this );
    editDivide_CanvasAction->addTo( Edit );
    editUndoAction->addTo( Edit );
    editRedoAction->addTo( Edit );
    Edit->insertSeparator();
    editCutAction->addTo( Edit );
    editCopyAction->addTo( Edit );
    editPasteAction->addTo( Edit );
    Edit->insertSeparator();
    editFindAction->addTo( Edit );
    MenuBar->insertItem( QString(""), Edit, 2 );

    helpMenu = new QPopupMenu( this );
    helpContentsAction->addTo( helpMenu );
    helpIndexAction->addTo( helpMenu );
    helpMenu->insertSeparator();
    helpAboutAction->addTo( helpMenu );
    MenuBar->insertItem( QString(""), helpMenu, 3 );

    MenuBar->insertSeparator( 4 );

    languageChange();
    resize( QSize(846, 791).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( fileOpenAction, SIGNAL( activated() ), this, SLOT( fileOpen() ) );
    connect( fileSaveAction, SIGNAL( activated() ), this, SLOT( fileSave() ) );
    connect( filePrintAction, SIGNAL( activated() ), this, SLOT( filePrint() ) );
    connect( fileExitAction, SIGNAL( activated() ), this, SLOT( close() ) );
    connect( editUndoAction, SIGNAL( activated() ), this, SLOT( editUndo() ) );
    connect( editRedoAction, SIGNAL( activated() ), this, SLOT( editRedo() ) );
    connect( editCutAction, SIGNAL( activated() ), this, SLOT( editCut() ) );
    connect( editCopyAction, SIGNAL( activated() ), this, SLOT( editCopy() ) );
    connect( editPasteAction, SIGNAL( activated() ), this, SLOT( editPaste() ) );
    connect( helpIndexAction, SIGNAL( activated() ), this, SLOT( helpIndex() ) );
    connect( helpContentsAction, SIGNAL( activated() ), this, SLOT( helpContents() ) );
    connect( helpAboutAction, SIGNAL( activated() ), this, SLOT( helpAbout() ) );
    connect( btnDraw, SIGNAL( clicked() ), this, SLOT( Draw() ) );
    connect( fileNewAction, SIGNAL( activated() ), this, SLOT( addNewTab() ) );
    connect( fileSave_AllSingle_PostscriptAction, SIGNAL( activated() ), this, SLOT( fileSaveAllSingle() ) );
    connect( fileSave_AllSeparate_PostscritpsAction, SIGNAL( activated() ), this, SLOT( fileSaveAllMultiple() ) );
    connect( lvGraphs, SIGNAL( selectionChanged(QListViewItem*) ), this, SLOT( selectTab(QListViewItem*) ) );
    connect( wgStack, SIGNAL( aboutToShow(QWidget*) ), this, SLOT( setTabAsCanvas(QWidget*) ) );
    connect( btnAddNewTab, SIGNAL( clicked() ), this, SLOT( addNewTab() ) );
    connect( btnRemoveTab, SIGNAL( clicked() ), this, SLOT( removeTab() ) );
    connect( btnRenameTab, SIGNAL( clicked() ), this, SLOT( renameTab() ) );
    connect( editDivide_CanvasAction, SIGNAL( activated() ), this, SLOT( divideCanvas() ) );
    connect( lvGraphs, SIGNAL( selectionChanged() ), this, SLOT( enableTabActionButtons() ) );
    connect( btnClear, SIGNAL( clicked() ), this, SLOT( clearGraph() ) );
    connect( ckbMultiGraph, SIGNAL( toggled(bool) ), this, SLOT( setMultigraphStatus(bool) ) );
    connect( tabsAction, SIGNAL( currentChanged(QWidget*) ), this, SLOT( enableDrawButton() ) );
    connect( ckbPolarErrors, SIGNAL( toggled(bool) ), gbPolarErrors, SLOT( setEnabled(bool) ) );
    connect( txt2DYAxisError, SIGNAL( textChanged(const QString&) ), this, SLOT( enableDrawButton() ) );
    connect( txt2DXAxisError, SIGNAL( textChanged(const QString&) ), this, SLOT( enableDrawButton() ) );
    connect( ckb2DErrors, SIGNAL( toggled(bool) ), gb2DErrors, SLOT( setEnabled(bool) ) );
    connect( txt2DYAxis, SIGNAL( textChanged(const QString&) ), this, SLOT( enableDrawButton() ) );
    connect( txt2DXAxis, SIGNAL( textChanged(const QString&) ), this, SLOT( enableDrawButton() ) );
    connect( txtEventCut, SIGNAL( textChanged() ), this, SLOT( txtEventCut_changed() ) );
    connect( btnApplyCut, SIGNAL( clicked() ), this, SLOT( applyRootCut() ) );
    connect( cmbEventCuts, SIGNAL( activated(const QString&) ), txtEventCut, SLOT( setText(const QString&) ) );
    connect( btnSaveCut, SIGNAL( clicked() ), this, SLOT( saveEventCut() ) );
    connect( btnViewData, SIGNAL( clicked() ), this, SLOT( viewData() ) );
    connect( cmbGraphType, SIGNAL( activated(int) ), this, SLOT( selectGraphType(int) ) );
    connect( cmbBranchNames, SIGNAL( activated(const QString&) ), txtEventCut, SLOT( append(const QString&) ) );

    // buddies
    textLabel1->setBuddy( cmbGraphType );
    init();
}

/*
 *  Destroys the object and frees any allocated resources
 */
MainForm::~MainForm()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void MainForm::languageChange()
{
    setCaption( tr( "Browser" ) );
    QToolTip::add( this, QString::null );
    btnAddNewTab->setText( QString::null );
    QToolTip::add( btnAddNewTab, tr( "Add new canvas" ) );
    btnRemoveTab->setText( QString::null );
    QToolTip::add( btnRemoveTab, tr( "Remove current canvas" ) );
    btnRenameTab->setText( QString::null );
    QToolTip::add( btnRenameTab, tr( "Rename the current canvas" ) );
    lvGraphs->header()->setLabel( 0, tr( "Canvas" ) );
    textLabel1_4->setText( tr( "<p align=\"center\"><font size=\"+1\"><font size=\"+1\">You selected an empty page! Choose a page on the left.</font></font></p>" ) );
    textLabel2_2->setText( tr( "Current number of events:" ) );
    tabsAction->changeTab( tabRootTree, tr( "Root Tree/Event Cut" ) );
    groupBox3->setTitle( tr( "Events" ) );
    txtEventCut->setText( tr( "ElL_ew>0 && CCheight_NS > 1.5 && CCheight_EW >1.5" ) );
    textLabel1_3_2->setText( tr( "Saved Cuts" ) );
    cmbEventCuts->clear();
    cmbEventCuts->insertItem( tr( "ElL_ew>0 && CCheight_NS <50 && CCheight_EW <50 && CCheight_EW>0  && CCheight_NS>0 " ) );
    textLabel1_3_2_2->setText( tr( "Available Branches" ) );
    btnApplyCut->setText( tr( "&Apply cut" ) );
    btnApplyCut->setAccel( QKeySequence( tr( "Alt+A" ) ) );
    btnSaveCut->setText( tr( "&Save Cut" ) );
    btnSaveCut->setAccel( QKeySequence( tr( "Alt+S" ) ) );
    btnViewData->setText( tr( "&View Data" ) );
    btnViewData->setAccel( QKeySequence( tr( "Alt+V" ) ) );
    textLabel1->setText( tr( "&Graph Type:" ) );
    cmbGraphType->clear();
    cmbGraphType->insertItem( tr( "2D Graph" ) );
    cmbGraphType->insertItem( tr( "Shower Angles" ) );
    cmbGraphType->insertItem( tr( "Antenna Position" ) );
    textLabel3->setText( tr( "x-axis:" ) );
    txt2DXAxis->setText( tr( "1-cos(Geoang)" ) );
    textLabel4->setText( tr( "y-axis:" ) );
    txt2DYAxis->setText( tr( "CCheight_EW*1e6/Nmu" ) );
    ckb2DErrors->setText( tr( "Use Errors" ) );
    gb2DErrors->setTitle( tr( "Errors" ) );
    textLabel3_2->setText( tr( "x-axis:" ) );
    txt2DXAxisError->setText( tr( "0.001" ) );
    textLabel4_2->setText( tr( "y-axis:" ) );
    txt2DYAxisError->setText( tr( "sqrt((CCheight_error_EW)^2+(0.4*CCheight_EW)^2)/log10(Nmu)" ) );
    txtPolarRAxis->setText( tr( "90-ElL_ew" ) );
    textLabel4_3->setText( tr( "theta-axis (in radians):" ) );
    textLabel3_3->setText( tr( "r-axis:" ) );
    textLabel1_5->setText( tr( "color code by:" ) );
    txtPolarThetaAxis->setText( tr( "(360-AzL_ew+90)*3.14159/180" ) );
    txtColorCode->setText( tr( "CCheight_EW" ) );
    ckbPolarErrors->setText( tr( "Use Errors" ) );
    gbPolarErrors->setTitle( tr( "Errors" ) );
    textLabel3_2_2->setText( tr( "r-axis:" ) );
    txtPolarRAxisError->setText( tr( "0.001" ) );
    textLabel4_2_2->setText( tr( "theta-axis:" ) );
    txtPolarThetaAxisError->setText( tr( "sqrt((CCheight_error_EW)^2+(0.4*CCheight_EW)^2)/log10(Nmu)" ) );
    comboBox1->clear();
    comboBox1->insertItem( tr( "Grande Coordinate" ) );
    ckbNewTab->setText( tr( "Draw in new tabbed &window" ) );
    ckbNewTab->setAccel( QKeySequence( tr( "Alt+W" ) ) );
    ckbMultiGraph->setText( tr( "Draw on the same graph (Multigraph)" ) );
    ckbMultiGraph->setAccel( QKeySequence( QString::null ) );
    btnClear->setText( tr( "&Clear" ) );
    btnClear->setAccel( QKeySequence( tr( "Alt+C" ) ) );
    btnDraw->setText( tr( "&Draw" ) );
    btnDraw->setAccel( QKeySequence( tr( "Alt+D" ) ) );
    fileNewAction->setText( tr( "&New Tab" ) );
    fileNewAction->setMenuText( tr( "&New Tab" ) );
    fileNewAction->setAccel( tr( "Ctrl+N" ) );
    fileOpenAction->setText( tr( "Open" ) );
    fileOpenAction->setMenuText( tr( "&Open..." ) );
    fileOpenAction->setAccel( tr( "Ctrl+O" ) );
    fileSaveAction->setText( tr( "Save" ) );
    fileSaveAction->setMenuText( tr( "&Save" ) );
    fileSaveAction->setAccel( tr( "Ctrl+S" ) );
    fileSaveAsAction->setText( tr( "Save As" ) );
    fileSaveAsAction->setMenuText( tr( "Save &As..." ) );
    fileSaveAsAction->setAccel( QString::null );
    filePrintAction->setText( tr( "Print" ) );
    filePrintAction->setMenuText( tr( "&Print..." ) );
    filePrintAction->setAccel( tr( "Ctrl+P" ) );
    fileExitAction->setText( tr( "Exit" ) );
    fileExitAction->setMenuText( tr( "E&xit" ) );
    fileExitAction->setAccel( QString::null );
    editUndoAction->setText( tr( "Undo" ) );
    editUndoAction->setMenuText( tr( "&Undo" ) );
    editUndoAction->setAccel( tr( "Ctrl+Z" ) );
    editRedoAction->setText( tr( "Redo" ) );
    editRedoAction->setMenuText( tr( "&Redo" ) );
    editRedoAction->setAccel( tr( "Ctrl+Y" ) );
    editCutAction->setText( tr( "Cut" ) );
    editCutAction->setMenuText( tr( "Cu&t" ) );
    editCutAction->setAccel( tr( "Ctrl+X" ) );
    editCopyAction->setText( tr( "Copy" ) );
    editCopyAction->setMenuText( tr( "&Copy" ) );
    editCopyAction->setAccel( tr( "Ctrl+C" ) );
    editPasteAction->setText( tr( "Paste" ) );
    editPasteAction->setMenuText( tr( "&Paste" ) );
    editPasteAction->setAccel( tr( "Ctrl+V" ) );
    editFindAction->setText( tr( "Find" ) );
    editFindAction->setMenuText( tr( "&Find..." ) );
    editFindAction->setAccel( tr( "Ctrl+F" ) );
    helpContentsAction->setText( tr( "Contents" ) );
    helpContentsAction->setMenuText( tr( "&Contents..." ) );
    helpContentsAction->setAccel( QString::null );
    helpIndexAction->setText( tr( "Index" ) );
    helpIndexAction->setMenuText( tr( "&Index..." ) );
    helpIndexAction->setAccel( QString::null );
    helpAboutAction->setText( tr( "About" ) );
    helpAboutAction->setMenuText( tr( "&About" ) );
    helpAboutAction->setAccel( QString::null );
    fileSave_AllAction->setText( tr( "Save A&ll As..." ) );
    fileSave_AllAction->setMenuText( tr( "Save A&ll As..." ) );
    fileSave_AllSingle_PostscriptAction->setText( tr( "&Single File" ) );
    fileSave_AllSingle_PostscriptAction->setMenuText( tr( "&Single File" ) );
    fileSave_AllSeparate_PostscritpsAction->setText( tr( "S&eparate Files" ) );
    fileSave_AllSeparate_PostscritpsAction->setMenuText( tr( "S&eparate Files" ) );
    editDivide_CanvasAction->setText( tr( "&Divide Canvas" ) );
    editDivide_CanvasAction->setMenuText( tr( "&Divide Canvas" ) );
    editDivide_CanvasAction->setAccel( QString::null );
    editDivide_Canvas2_x_2Action->setText( tr( "&2 x 2" ) );
    editDivide_Canvas2_x_2Action->setMenuText( tr( "&2 x 2" ) );
    editDivide_Canvas3_x_2Action->setText( tr( "&3 x 2" ) );
    editDivide_Canvas3_x_2Action->setMenuText( tr( "&3 x 2" ) );
    editDivide_Canvas4_x_2Action->setText( tr( "&4 x 2" ) );
    editDivide_Canvas4_x_2Action->setMenuText( tr( "&4 x 2" ) );
    fileMenu->changeItem( fileMenu->idAt( 3 ), tr( "Save A&ll As..." ) );
    if (MenuBar->findItem(1))
        MenuBar->findItem(1)->setText( tr( "&File" ) );
    if (MenuBar->findItem(2))
        MenuBar->findItem(2)->setText( tr( "&Edit" ) );
    if (MenuBar->findItem(3))
        MenuBar->findItem(3)->setText( tr( "&Help" ) );
}

